{"version":3,"sources":["routers/guest/Router.ts","page/guest/component/LineID.tsx","page/guest/component/VerifyCode.tsx","routers/investor/Router.ts","page/guest/Index.tsx","layout/LayoutRoute.tsx","routers/routerRender.tsx","layout/LoginLayout.tsx","routers/guest/GuestRouter.tsx","page/investor/component/formularComponent/Lists.tsx","page/investor/component/Formular.tsx","page/investor/component/formularComponent/Profit.tsx","page/investor/component/formularComponent/Coins.tsx","page/investor/Index.tsx","layout/MainLayout.tsx","page/investor/component/LineBTC.tsx","api/bitkub.ts","page/investor/component/TickerForm.tsx","page/investor/component/TickerTable.tsx","page/investor/CryptoSymbol.tsx","page/investor/CryptoTradingViewer.tsx","routers/investor/InvestorRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["R","login","link","name","LineID","show","form","toggle","onFinish","a","validateFields","style","display","width","layout","Item","label","rules","required","message","type","onClick","VerifyCode","toggleBack","float","index","cryptoSymbol","tradingViewer","LOGIN_USERNAME","gql","CHECK_CODE","Index","Form","useForm","useState","lineidShow","setLineidShow","verifyCode","setVerifyCode","useLazyQuery","loginUsernameFC","loginUsername","checkCodeFC","checkCode","goTo","setGoTo","useEffect","loading","info","data","success","window","localStorage","setItem","check_code_by_username","access_token","username","setTimeout","to","number","value","getFieldsValue","variables","code","id","LayoutRoute","Component","component","Layout","rest","render","props","RouterRender","routers","map","router","exact","path","key","uuidv4","LoginLayout","children","title","icon","faBalanceScaleRight","size","faCoins","Lists","setFormular","console","log","itemLayout","dataSource","renderItem","item","Meta","avatar","Formular","Profit","formValue","setFormValue","descDeposit","setDescDeposit","valFee","fee","amount","cash","crypto_buy","receive","crypto_sale","profit","initialValues","inputMode","step","onChange","marginTop","Coins","bahtUse","setBahtUse","baht","coins","Math","ceil","columns","dataIndex","elem","toUpperCase","GET_SYMBOL_CRYPTO","goToPath","setGoToPath","formular","CryptoSymbolList","useQuery","symbol_crypto","val","justify","gutter","xs","sm","md","lg","extra","className","onRow","record","rowIndex","replace","symbol","formularCheck","Header","Content","Footer","MainLayout","background","theme","mode","defaultSelectedKeys","getItem","RLogin","textAlign","process","REACT_APP_VERSION","Option","Select","OptGroup","Text","Typography","LineBTC","stateLabels","setStateLabels","stateData","setStateData","resolution","setResolution","periodOfTime","setPeriodOfTime","setData","unixTime","moment","unix","from","axios","get","then","res","TradingAPI","result","t","UNIX_timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","timeConverter","concat","c","state","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","defaultValue","max","options","text","fontSize","legend","position","ADD_TICKER","TickerForm","setResetTable","setType","showPriceOrPoint","setshowPriceOrPoint","inputPrice","setInputPrice","notification_times","inputMain","setInputMain","price","point1","setPoint1","point2","setPoint2","visibleModal","setVisibleModal","RadioOnClineHandle","e","target","useMutation","addTicker","visible","onOk","toLowerCase","parseFloat","times","alert_msg","detail","context","headers","Authorization","onCancel","okText","cancelText","bordered","span","modalDetail","orientation","Group","buttonStyle","Button","disabled","prefix","faMoneyBillAlt","addonAfter","allowClear","showTime","format","Ribbon","faClock","faCommentAlt","LIST_TICKERS","DELETE_TICKER","TickerTable","resetTable","listTickers","onCompleted","tickers_crypto_symbol","update","catach","fetchData","delete_ticker_crypto","deleteTickerFC","refetch","_record","danger","_id","CryptoSymbol","Symbol","useParams","viewBitcoin","setViewBitcoin","margin","html","Title","CryptoTradingViewer","tradingViews","setTradingViews","isTradingViewsMount","setIsTradingViewsMount","symbolCrypto","newCrypto","oldSymbol","script","addScript","crypto","level","href","faExternalLinkSquareAlt","paddingLeft","split","faExternalLinkAlt","clientApollo","ApolloClient","uri","cache","InMemoryCache","createBrowserHistory","App","client","GuestRouter","InvestorRouter","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"kXAeeA,EAPM,CACnBC,MAAO,CACLC,KAAK,GAAD,OAJS,UAKbC,KAAM,U,+FC+BKC,EAhCuB,SAAC,GAEnB,IADlBC,EACiB,EADjBA,KAAMC,EACW,EADXA,KAAMC,EACK,EADLA,OAENC,EAAQ,uCAAG,sBAAAC,EAAA,sEACTH,EAAKI,iBADI,OAEfH,IAFe,2CAAH,qDAKd,OACE,yBAAKI,MAAO,CAAEC,QAASP,EAAO,QAAU,SACtC,kBAAC,IAAD,CACEC,KAAMA,EACNK,MAAO,CAAEE,MAAO,QAChBV,KAAK,QACLW,OAAO,WACPN,SAAUA,GAEV,kBAAC,IAAKO,KAAN,CACEC,MAAM,WACNb,KAAK,WACLc,MAAO,CAAC,CAAEC,SAAUb,EAAMc,QAAS,qCAEnC,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAQC,KAAK,UAAUC,QAASb,GAAhC,uBCYOc,EAnC+B,SAAC,GAAqD,IAAnDjB,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,OAAQgB,EAA8B,EAA9BA,WASnE,OACE,yBAAKZ,MAAO,CAAEC,QAASP,EAAO,QAAU,SACtC,kBAAC,IAAD,CACEC,KAAMA,EACNQ,OAAO,YAEP,kBAAC,IAAKC,KAAN,CACEC,MAAM,cACNb,KAAK,OACLc,MAAO,CAAC,CAAEC,SAAUb,EAAMc,QAAS,6BAEnC,kBAAC,IAAD,OAEF,6BACE,kBAAC,IAAD,CAAQC,KAAK,QAAQC,QAtBd,WACbE,KAqB4CZ,MAAO,CAAEa,MAAO,SAAtD,QAGA,kBAAC,IAAD,CAAQJ,KAAK,UAAUC,QArBV,WACnBd,MAoBM,cCZKP,EAfM,CACnByB,MAAO,CACLvB,KAAM,IACNC,KAAM,YAERuB,aAAc,CACZxB,KAAM,yBACNC,KAAM,UAERwB,cAAe,CACbzB,KAAM,wBACNC,KAAM,kB,8ZCPV,IAAMyB,EAAiBC,cAAH,KAMdC,EAAaD,cAAH,KAkFDE,EAzES,WAAoB,IAAD,EAC1BC,IAAKC,UAAb3B,EADkC,sBAEL4B,oBAAS,GAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,OAGLF,oBAAS,GAHJ,mBAGlCG,EAHkC,KAGtBC,EAHsB,OAKAC,uBAAaX,GALb,mBAKlCY,EALkC,KAKjBC,EALiB,OAMRF,uBAAaT,GANL,mBAMlCY,EANkC,KAMrBC,EANqB,OAQjBT,qBARiB,mBAQlCU,EARkC,KAQ5BC,EAR4B,KAUzCC,qBAAU,WACJL,EAAcM,SAChB5B,IAAQ6B,KAAK,gJAEd,CAACP,EAAcM,UAElBD,qBAAU,WAIa,IAAD,KAHhBH,EAAUI,SACZ5B,IAAQ6B,KAAK,0GAEXL,EAAUM,QACZ9B,IAAQ+B,QAAQ,8CAChBC,OAAOC,aAAaC,QAAQ,gBAA5B,2BAAuDV,EAAUM,YAAjE,aAAuD,EAAgBK,uBAAuBC,eAC9FJ,OAAOC,aAAaC,QAAQ,WAA5B,oBAA2CV,EAAUM,YAArD,aAA2C,EAAgBK,uBAAuBE,WAClFC,YAAW,WACTZ,EAAQ,kBAAC,IAAD,CAAUa,GAAI1D,EAAEyB,MAAMvB,UAC7B,QAEJ,CAACyC,EAAUI,UAed,IAAMxC,EAAS,SAACoD,GACd,IAAMC,EAAQtD,EAAKuD,iBACnB,OAAQF,GACN,KAAK,EACHnB,EAAgB,CAAEsB,UAAW,CAAEN,SAAUI,EAAMJ,YAC/C,MACF,KAAK,EACHd,EAAY,CACVoB,UAAW,CACTN,SAAUI,EAAMJ,SAChBO,KAAMH,EAAMG,QAOpB3B,GAAeD,GACfG,GAAeD,IAGjB,OACE,yBAAK2B,GAAG,cACLpB,GAAQ,KACT,kBAAC,EAAD,CAAQvC,KAAM8B,EAAY7B,KAAMA,EAAMC,OAAQ,WAAcA,EAAO,MACnE,kBAAC,EAAD,CAAYF,KAAMgC,EAAY/B,KAAMA,EAAMC,OAAQ,WAAcA,EAAO,IAAOgB,WAAY,WAAchB,EAAO,Q,kBC5EtG0D,EAX+B,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAA8BC,EAAjC,EAAyBtD,OAAmBuD,EAA5C,6CAC5C,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACC,GAAD,OACN,kBAACH,EAAD,KACE,kBAACF,EAAcK,SCLVC,EAAe,SAC1BC,GAD0B,OAElBA,EAAQC,KAChB,SAACC,GAAD,OACE,kBAAC,EAAD,CACEC,OAAK,EACLC,KAAMF,EAAOzE,KACbY,OAAQ6D,EAAO7D,OACfqD,UAAWQ,EAAOR,UAClBW,IAAKC,oBCRIC,EATe,SAACT,GAAwB,IAC7CU,EAAaV,EAAbU,SACR,OACE,oCACGA,ICAQT,IAAa,CAC1B,CACEtE,KAAMF,EAAEC,MAAMC,KACdY,OAAQkE,EACRb,UAAWpC,K,6ECCTkB,EAAO,CACX,CACEiC,MAAO,4EACPC,KAAM,kBAAC,IAAD,CAAiBA,KAAMC,IAAqBC,KAAK,OACvD3B,GAAI,UAEN,CACEwB,MAAO,iLACPC,KAAM,kBAAC,IAAD,CAAiBA,KAAMG,IAASD,KAAK,OAC3C3B,GAAI,UAwBO6B,EApBiB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAEjC,OADAC,QAAQC,IAAI,GAEV,oCACE,kBAAC,IAAD,CACEC,WAAW,aACXC,WAAY3C,EACZ4C,WAAY,SAACC,GAAD,OACV,kBAAC,IAAK/E,KAAN,KACE,kBAAC,IAAKA,KAAKgF,KAAX,CACEC,OAAQF,EAAKX,KACbD,MAAO,kBAAC,IAAD,CAAQ9D,KAAK,OAAOC,QAAS,WAAQmE,EAAYM,EAAKpC,MAASoC,EAAKZ,eCnB1Ee,EARuB,SAAC,GAAqB,IAAnBT,EAAkB,EAAlBA,YACvC,OACE,6BACE,kBAAC,EAAD,CAAOA,YAAaA,M,kBCgEXU,EArEA,WAAO,IAAD,EACehE,oBAAc,GAD7B,mBACZiE,EADY,KACDC,EADC,OAEmBlE,qBAFnB,mBAEZmE,EAFY,KAECC,EAFD,OAGJtE,IAAKC,UAAb3B,EAHY,oBAkBnB,OAbAwC,qBAAU,WACR,IAAMc,EAA8EtD,EAAKuD,iBACnF0C,GAAU,IAAM3C,EAAM4C,KAAO,IAC7BC,EAAU7C,EAAM8C,KAAOH,EAAU3C,EAAM+C,WACvCC,EAAWH,EAAS7C,EAAMiD,YAAeN,EACzCO,EAASF,EAAUhD,EAAM8C,KAC/BJ,EAAe,CACbG,SACAG,UACAE,aAED,CAACX,IAGF,oCACE,kBAAC,IAAD,iCACA,kBAAC,IAAD,CACErF,OAAO,WACPR,KAAMA,EACNyG,cAAe,CAAEP,IAAK,MAEtB,kBAAC,IAAKzF,KAAN,CACEC,MAAM,6IACNC,MAAO,CAAC,CAAEC,UAAU,IACpBf,KAAK,QAEL,kBAAC,IAAD,CAAOiB,KAAK,SAAS4F,UAAU,UAAUC,KAAK,MAAMC,SAAU,WAAQd,GAAcD,OAEtF,kBAAC,IAAKpF,KAAN,CACEC,MAAM,0DACNC,MAAO,CAAC,CAAEC,UAAU,IACpBf,KAAK,cAEL,kBAAC,IAAD,CAAOiB,KAAK,SAAS4F,UAAU,UAAUC,KAAK,MAAMC,SAAU,WAAQd,GAAcD,OAEtF,kBAAC,IAAKpF,KAAN,CACEC,MAAM,oDACNC,MAAO,CAAC,CAAEC,UAAU,IACpBf,KAAK,eAEL,kBAAC,IAAD,CAAOiB,KAAK,SAAS4F,UAAU,UAAUC,KAAK,MAAMC,SAAU,WAAQd,GAAcD,OAEtF,kBAAC,IAAKpF,KAAN,CACEC,MAAM,MACNb,KAAK,OAEL,kBAAC,IAAD,CAAOiB,KAAK,SAAS4F,UAAU,UAAUC,KAAK,MAAMC,SAAU,WAAQd,GAAcD,SAIrE,OAAXE,QAAW,IAAXA,OAAA,EAAAA,EAAaI,QACX,kBAAC,IAAD,CAAM9F,MAAO,CAAEwG,UAAW,KACxB,kBAAC,IAAD,CAAcrG,OAAO,YACnB,kBAAC,IAAaC,KAAd,CAAmBC,MAAM,uHAAkC,OAAXqF,QAAW,IAAXA,OAAA,EAAAA,EAAaI,SAAU,MACvE,kBAAC,IAAa1F,KAAd,CAAmBC,MAAM,6EAA2B,OAAXqF,QAAW,IAAXA,OAAA,EAAAA,EAAaO,UAAW,MACjE,kBAAC,IAAa7F,KAAd,CAAmBC,MAAM,mFAA4B,OAAXqF,QAAW,IAAXA,OAAA,EAAAA,EAAaS,SAAU,QAGnE,OCNHM,EA1DD,WAAO,IAAD,EACHpF,IAAKC,UAAb3B,EADW,sBAEgB4B,oBAAc,GAF9B,mBAEXiE,EAFW,KAEAC,EAFA,OAGYlE,mBAAiB,GAH7B,mBAGXmF,EAHW,KAGFC,EAHE,KAYlB,OAPAxE,qBAAU,WACR,IAAMc,EAA2DtD,EAAKuD,iBAChE0C,GAAU,IAAM3C,EAAM4C,KAAO,IAC7Be,EAAQ3D,EAAM4D,MAAQ5D,EAAM+C,WAAcJ,EAChDe,EAAWG,KAAKC,KAAKH,MACpB,CAACpB,IAGF,oCACE,kBAAC,IAAD,6CACA,kBAAC,IAAD,CACErF,OAAO,WACPR,KAAMA,EACNyG,cAAe,CAAEP,IAAK,MAEtB,kBAAC,IAAKzF,KAAN,CACEC,MAAM,yJACNC,MAAO,CAAC,CAAEC,UAAU,IACpBf,KAAK,SAEL,kBAAC,IAAD,CAAOiB,KAAK,SAAS4F,UAAU,UAAUC,KAAK,MAAMC,SAAU,WAAQd,GAAcD,OAEtF,kBAAC,IAAKpF,KAAN,CACEC,MAAM,yGACNC,MAAO,CAAC,CAAEC,UAAU,IACpBf,KAAK,cAEL,kBAAC,IAAD,CAAOiB,KAAK,SAAS4F,UAAU,UAAUC,KAAK,MAAMC,SAAU,WAAQd,GAAcD,OAEtF,kBAAC,IAAKpF,KAAN,CACEC,MAAM,MACNb,KAAK,OAEL,kBAAC,IAAD,CAAOiB,KAAK,SAAS4F,UAAU,UAAUC,KAAK,MAAMC,SAAU,WAAQd,GAAcD,QAIhFkB,EACE,kBAAC,IAAD,CAAM1G,MAAO,CAAEwG,UAAW,KACxB,kBAAC,IAAD,CAAcrG,OAAO,YACnB,kBAAC,IAAaC,KAAd,CAAmBC,MAAM,0GACtBqG,GAAW,KACX,IAFH,wBAOF,O,4JCzClB,IAAMM,EAAU,CACd,CACEzC,MAAO,mDACP0C,UAAW,QACX9C,IAAK,QACLR,OAAQ,SAACuD,GAAD,OAAgC,gCAASA,EAAKC,iBAExD,CACE5C,MAAO,GACP0C,UAAW,SACX9C,IAAK,SACLR,OAAQ,SAACuD,GAAD,OAAgC,gCAASA,EAAKC,kBA0BpDC,EAAoBlG,cAAH,KAgFRE,EAtES,WAAoB,IAAD,MACTG,qBADS,mBAClC8F,EADkC,KACxBC,EADwB,OAET/F,mBAA6B,SAFpB,mBAElCgG,EAFkC,KAExB1C,EAFwB,KAKnC2C,EAAgB,UAFAC,mBAASL,GAEQ9E,YAAjB,iBAAG,EAAoBoF,qBAAvB,aAAG,EAAmC3D,KAAI,SAAC4D,EAAU7G,GAAX,oBAC9DqD,IAAKrD,GACF6G,MAcL,OACE,oCACGN,GAAY,KACb,kBAAC,IAAD,CACEO,QAAQ,eACRC,OAAQ,CAAC,GAAI,CACXC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,MAG7B,kBAAC,IAAD,CAAKH,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CACE1D,MAAM,iBACNvE,MAAO,CAAEE,MAAO,QAChBgI,MACE,oCACE,kBAAC,IAAD,CACEzH,KAAK,OACLC,QAAS,WACP4G,EAAY,kBAAC,IAAD,CAAUvE,GAAI1D,EAAE2B,cAAczB,UAH9C,uBAWJ,kBAAC,IAAD,CACE4I,UAAU,cACVnB,QAASA,EACT/B,WAAYuC,EACZY,MAAO,SAACC,EAAQC,GAAT,MAAuB,CAC5B5H,QAAS,WACP4G,EAAY,kBAAC,IAAD,CAAUvE,GAAI1D,EAAE0B,aAAaxB,KAAKgJ,QAAQ,UAAWF,EAAOG,OAAOrB,yBAMzF,kBAAC,IAAD,CAAKW,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CAAM1D,MAAM,kCACV,kBAAC,EAAD,CAAUM,YAAaA,IAnDX,WACpB,OAAQ0C,GACN,IAAK,SACH,OAAQ,kBAAC,EAAD,MACV,IAAK,QACH,OAAQ,kBAAC,EAAD,MACV,QACE,OAAQ,sCA6CHkB,Q,mBCpHLC,I,OAA4BjF,KAA5BiF,QAAQC,GAAoBlF,KAApBkF,QAASC,GAAWnF,KAAXmF,OAmCVC,GAjCc,SAACjF,GAAwB,IAC5CU,EAAaV,EAAbU,SACR,OACE,kBAAC,KAAD,CAAQ6D,UAAU,UAChB,kBAACO,GAAD,CAAQ1I,MAAO,CAAE8I,WAAY,SAC3B,yBAAKX,UAAU,SACf,kBAAC,KAAD,CAAMY,MAAM,QAAQC,KAAK,aAAaC,oBAAqB,CAAC,MAC1D,kBAAC,KAAK7I,KAAN,CAAW+D,IAAI,KAAI,kBAAC,IAAD,CAAMpB,GAAI1D,EAAEyB,MAAMvB,MAAlB,aACnB,yBAAKS,MAAO,CAAEa,MAAO,UAEjB2B,OAAOC,aAAayG,QAAQ,YACxB,kBAAC,IAAD,CAAQzI,KAAK,QAAQ+B,OAAOC,aAAayG,QAAQ,aACjD,kBAAC,IAAD,CAAQzI,KAAK,QAAO,kBAAC,IAAD,CAAMsC,GAAIoG,EAAO7J,MAAMC,MAAvB,aAKhC,6BACA,kBAACoJ,GAAD,KACE,yBAAKR,UAAU,uBACZ7D,IAGL,kBAACsE,GAAD,CAAQ5I,MAAO,CAAEoJ,UAAW,WAA5B,gCAGG,IACAC,oLAAYC,qB,qGC9BbC,GAAqBC,KAArBD,OAAQE,GAAaD,KAAbC,SAERC,GAASC,KAATD,KAoHOE,GAjGyB,SAAC,GAA6B,IAA3BpB,EAA0B,EAA1BA,OAA0B,EAC7BjH,mBAAS,IADoB,mBAC5DsI,EAD4D,KAC/CC,EAD+C,OAEjCvI,mBAAS,IAFwB,mBAE5DwI,EAF4D,KAEjDC,EAFiD,OAI/BzI,mBAAyB,KAJM,mBAI5D0I,EAJ4D,KAIhDC,EAJgD,OAK3B3I,mBAAS,GALkB,mBAK5D4I,EAL4D,KAK9CC,EAL8C,KAO7DC,EAAU,WACd,IAAMC,EAAWC,OAASC,QC/BJ,SAAChC,EAAoByB,EAA4BQ,EAAc1H,GAA/D,OAAmF2H,KAAMC,IAAN,oEAAuEnC,EAAvE,uBAA4FyB,EAA5F,iBAA+GQ,EAA/G,eAA0H1H,IAAM6H,MAAK,SAACC,GAAD,OAAmBA,EAAIvI,SDgCrQwI,CAAWtC,EAAsByB,EAAYK,EAA0B,KAAfH,EAAqBG,GAAUM,MAAK,SAACG,GAC3FjB,EAAeiB,EAAOC,EAAEjH,KAAI,SAACyG,GAAD,OA3BZ,SAACS,GACrB,IAAMnL,EAAI,IAAIoL,KAAsB,IAAjBD,GAEbE,EAAOrL,EAAEsL,cACTC,EAFS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAExEvL,EAAEwL,YACjBC,EAAOzL,EAAE0L,UACTC,EAAO3L,EAAE4L,WACTC,EAAM7L,EAAE8L,aACRC,EAAM/L,EAAEgM,aAEd,MADU,UAAMP,EAAN,YAAcF,EAAd,YAAuBF,EAAvB,YAA+BM,EAA/B,YAAuCE,EAAvC,YAA8CE,GAkBTE,CAAcvB,MAAOwB,OAAO,CAAC,KAAM,KAAM,KAAM,QAC1FhC,EAAae,EAAOkB,OAIxB9J,qBAAU,WACRkI,MACC,IAEH,IAAM6B,EAAQ,CACZC,OAAQtC,EACRuC,SAAU,CACR,CACE/L,MAAO,eACPgM,MAAM,EACNC,YAAa,GACbC,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACbnK,KAAMyH,KAKZ,OACE,6BACE,kBAAC,IAAD,CAAKlC,OAAQ,CAAC,GAAI,KAChB,kBAAC,IAAD,CAAKE,GAAI,GAAID,GAAI,GAAIE,GAAI,GAAIC,GAAI,IAC/B,kBAACyB,GAAD,+EACA,kBAAC,KAAD,CACEgD,aAAa,IACb1M,MAAO,CAAEE,MAAO,KAChBqG,SAAU,SAACtD,GACTiH,EAAcjH,KAGhB,kBAACwG,GAAD,CAAUpJ,MAAM,4BACd,kBAACkJ,GAAD,CAAQtG,MAAM,KAAd,8BACA,kBAACsG,GAAD,CAAQtG,MAAM,KAAd,8BACA,kBAACsG,GAAD,CAAQtG,MAAM,MAAd,+BACA,kBAACsG,GAAD,CAAQtG,MAAM,MAAd,gCAEF,kBAACwG,GAAD,CAAUpJ,MAAM,8CACd,kBAACkJ,GAAD,CAAQtG,MAAM,MAAd,gDACA,kBAACsG,GAAD,CAAQtG,MAAM,OAAd,iDAEF,kBAACwG,GAAD,CAAUpJ,MAAM,sBACd,kBAACkJ,GAAD,CAAQtG,MAAM,MAAd,2BAIN,kBAAC,IAAD,CAAK8E,GAAI,GAAID,GAAI,GAAIE,GAAI,GAAIC,GAAI,IAC/B,kBAACyB,GAAD,qGACA,kBAAC,KAAD,CAAaiC,IAAK,EAAGgB,IAAK,IAAKD,aAAc,EAAGnG,SAAU,SAACtD,GAAiBmH,EAAgBnH,MAC5F,kBAACyG,GAAD,qDAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEjJ,KAAK,UACLC,QAAS,WACP2J,MAHJ,gDAUJ,kBAAC,IAAD,KACE,kBAAC,QAAD,CACE/H,KAAM4J,EACNU,QAAS,CACPrI,MAAO,CACLtE,SAAS,EACT4M,KAAM,+BACNC,SAAU,IAEZC,OAAQ,CACN9M,SAAS,EACT+M,SAAU,e,sZEvFxB,IAAMC,GAAa/L,cAAH,MAkRDgM,GAlQ+B,SAAC,GAA4C,IAA1C1E,EAAyC,EAAzCA,OAAQ2E,EAAiC,EAAjCA,cAAiC,EAChE5L,mBAAS,kBADuD,mBACjFd,EADiF,KAC3E2M,EAD2E,OAExC7L,mBAAS,SAF+B,mBAEjF8L,EAFiF,KAE/DC,EAF+D,OAGpD/L,mBAAsB,IAH8B,mBAGjFgM,EAHiF,KAGrEC,EAHqE,OAItDjM,mBAAqB,CAAEkM,mBAAoB,IAJW,mBAIjFC,EAJiF,KAItEC,EAJsE,OAK5DpM,mBAAS,CACnCgK,KAAM,GAAIf,KAAM,EAAGoD,MAAO,IAN4D,mBAKjFC,EALiF,KAKzEC,EALyE,OAQ5DvM,mBAAS,CACnCgK,KAAM,GAAIf,KAAM,EAAGoD,MAAO,IAT4D,mBAQjFG,EARiF,KAQzEC,EARyE,OAYhEzM,qBAZgE,mBAYjFU,EAZiF,KAY3EC,EAZ2E,OAchDX,oBAAS,GAduC,mBAcjF0M,EAdiF,KAcnEC,EAdmE,KAgBlFC,EAAqB,SAACC,EAAQ1O,GAClC4N,EAAoB5N,GACpB0N,EAAQgB,EAAEC,OAAOpL,QAlBqE,EAqBpEqL,sBAAYrB,IAAzBsB,EArBiF,oBA0IxF,OACE,6BACGtM,GAAQ,KACT,kBAAC,KAAD,CACEsC,MAAM,iFACNiK,QAASP,EACTQ,KA5FW,WACf,GAAKjM,OAAOC,aAAayG,QAAQ,iBAE1B,CACL,OAAQzI,GACN,IAAK,iBACH8N,EAAU,CACRpL,UAAW,CACTqF,OAAQA,EAAOkG,cACfd,MAAOe,WAAWpB,EAAWK,OAC7BgB,MAAOD,WAAWjB,EAAUD,oBAC5BoB,UAAWnB,EAAUoB,QAEvBC,QAAS,CACPC,QAAS,CACPC,cAAezM,OAAOC,aAAayG,QAAQ,qBAKjD,MACF,IAAK,gBACHqF,EAAU,CACRpL,UAAW,CACTqF,OAAQA,EAAOkG,cACfd,MAAOL,EAAWK,MAClBgB,MAAOlB,EAAUD,mBACjBoB,UAAWnB,EAAUoB,UAO7BhM,YAAW,WACToL,GAAgB,GAChBf,GAAc,KACb,UAnCHjL,EAAQ,kBAAC,IAAD,CAAUa,GAAI1D,EAAEC,MAAMC,SA2F5B2P,SAAU,WAAQhB,GAAiBD,IACnCkB,OAAO,2EACPC,WAAW,uCACXlP,MAAM,OAvDQ,WAClB,OAAQO,GACN,IAAK,iBACH,OACE,oCACE,kBAAC,IAAD,CAAc8D,MAAM,+GAAqB8K,UAAQ,GAC/C,kBAAC,IAAajP,KAAd,CAAmBC,MAAM,+DAAaiP,KAAM,GACzC/B,EAAWK,MACX,IAFH,sBAKA,kBAAC,IAAaxN,KAAd,CAAmBC,MAAM,mGAAmBiP,KAAM,GAC/C5B,EAAUD,mBACV,IAFH,kCAKA,kBAAC,IAAarN,KAAd,CAAmBC,MAAM,qHAAsBiP,KAAM,GAClD5B,EAAUoB,UAKrB,IAAK,gBACH,OACE,oCACE,kBAAC,IAAD,CAAcvK,MAAM,yGAAoB8K,UAAQ,GAC9C,kBAAC,IAAajP,KAAd,CAAmBC,MAAM,+DAAaiP,KAAM,GACzC/B,EAAWK,MACX,KAEH,kBAAC,IAAaxN,KAAd,CAAmBC,MAAM,mGAAmBiP,KAAM,GAC/C5B,EAAUD,mBACV,IAFH,kCAKA,kBAAC,IAAarN,KAAd,CAAmBC,MAAM,qHAAsBiP,KAAM,GAClD5B,EAAUoB,WAqBlBS,IAEH,kBAAC,IAAD,CAASC,YAAY,QAArB,sEACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKzH,GAAI,GAAID,GAAI,GAAIE,GAAI,GAAIC,GAAI,IAC/B,kBAAC,KAAMwH,MAAP,CAAa/C,aAAa,iBAAiBgD,YAAY,SACrD,kBAAC,KAAMC,OAAP,CAAc1M,MAAM,iBAAiBvC,QAAS,SAAC0N,GAAaD,EAAmBC,EAAG,WAAlF,uFAEE,6DAEF,kBAAC,KAAMuB,OAAP,CAAc1M,MAAM,gBAAgBvC,QAAS,SAAC0N,GAAaD,EAAmBC,EAAG,WAAjF,uFAEE,uDAEF,kBAAC,KAAMuB,OAAP,CAAcC,UAAQ,EAAC3M,MAAM,eAAevC,QAAS,SAAC0N,GAAaD,EAAmBC,EAAG,WAAzF,2BAEE,yEAEF,kBAAC,KAAMuB,OAAP,CAAcC,UAAQ,EAAC3M,MAAM,kBAAkBvC,QAAS,SAAC0N,GAAaD,EAAmBC,EAAG,WAA5F,2BAEE,kFAKR,kBAAC,IAAD,CAASoB,YAAY,QAArB,oJACA,kBAAC,IAAD,CAAKxP,MAAO,CAAEC,QAA8B,UAArBoN,EAA+B,QAAU,SAC9D,kBAAC,IAAD,CAAKiC,KAAM,IACT,4NACA,kBAAC,IAAD,CACEO,OAAQ,kBAAC,IAAD,CAAiBrL,KAAMsL,MAC/BC,WAAW,qBACXC,YAAU,EACVvP,KAAK,SACL8F,SAAU,SAAC6H,GAAaZ,EAAc,2BAAKD,GAAN,IAAkBK,MAAOQ,EAAEC,OAAOpL,cAI7E,kBAAC,IAAD,CAAKjD,MAAO,CAAEC,QAA8B,UAArBoN,EAA+B,QAAU,SAC9D,kBAAC,IAAD,CAAKiC,KAAM,IACT,kBAAC,KAAD,KACE,yEACA,kBAAC,KAAD,CAAYW,UAAQ,EAAC1J,SAAU,SAACtD,GAAiB6K,EAAU,2BAAKD,GAAN,IAActC,KAAMtI,EAAMiN,OAAO,+BAG/F,6BACA,kBAAC,IAAD,CAAKZ,KAAM,IACT,8BACE,kBAAC,KAAMa,OAAP,CAActD,KAAK,0EACjB,kBAAC,IAAD,KACGgB,EAAOD,MACP,IAFH,yBAQN,6BACA,kBAAC,IAAD,CAAK0B,KAAM,IACT,kBAAC,KAAD,KACE,yEACA,kBAAC,KAAD,CAAYW,UAAQ,EAAC1J,SAAU,SAACtD,GAAiB+K,EAAU,2BAAKH,GAAN,IAActC,KAAMtI,EAAMiN,OAAO,+BAG/F,6BACA,kBAAC,IAAD,CAAKZ,KAAM,IACT,8BACE,kBAAC,KAAMa,OAAP,CAActD,KAAK,0EACjB,kBAAC,IAAD,KACGkB,EAAOH,MACP,IAFH,yBAQN,8BAEF,kBAAC,IAAD,CAAS4B,YAAY,QAArB,4EACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKF,KAAM,IACT,kBAAC,IAAD,CACErM,MAAO,EACPyJ,aAAc,EACdmD,OAAQ,kBAAC,IAAD,CAAiBrL,KAAM4L,MAC/BL,WAAW,iCACXC,YAAU,EACVvP,KAAK,SACL8F,SAAU,SAAC6H,GAAaT,EAAa,2BAAKD,GAAN,IAAiBD,mBAAoBW,EAAEC,OAAOpL,cAIxF,kBAAC,IAAD,CAASuM,YAAY,QAArB,8CACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEK,OAAQ,kBAAC,IAAD,CAAiBrL,KAAM6L,MAC/BL,YAAU,EACVzJ,SAAU,SAAC6H,GAAaT,EAAa,2BAAKD,GAAN,IAAiBoB,OAAQV,EAAEC,OAAOpL,aAG1E,6BACA,kBAAC,IAAD,CAAK2E,QAAQ,OACX,kBAAC,IAAD,CAAQnH,KAAK,UAAUC,QAAS,kBAAMwN,GAAiBD,KAAvD,+E,idCzRR,IAAMqC,GAAepP,cAAH,MAWZqP,GAAgBrP,cAAH,MAiGJsP,GAtFkC,SAAC,GAAwD,IAAD,EAArDhI,EAAqD,EAArDA,OAAQ2E,EAA6C,EAA7CA,cAAesD,EAA8B,EAA9BA,WAA8B,EAE/ElP,mBAAS,IAFsE,mBAE1F8I,GAF0F,WAGjGqG,EAAcjJ,mBAAS6I,GAAc,CACzCnN,UAAW,CACTqF,OAAQA,EAAOkG,eAEjBK,QAAS,CACPC,QAAS,CACPC,cAAezM,OAAOC,aAAayG,QAAQ,mBAG/CyH,YAAa,WAAO,IAAD,EACjBtG,GAAQ,UAAAqG,EAAYpO,YAAZ,eAAkBsO,wBAAyB,OAbgD,EAgBhEtC,sBAAYiC,GAAe,CAChEM,OADgE,SACzDC,EAAQC,GAAY,IAAD,EACxB1G,GAAQ,UAAA0G,EAAUzO,YAAV,eAAgB0O,uBAAwB,OAlBmD,mBAgBhGC,EAhBgG,aAqB/E1P,sBArB+E,mBAqBhGU,EArBgG,KAqB1FC,EArB0F,KAuBvGC,qBAAU,WAC6C,OAAjDK,OAAOC,aAAayG,QAAQ,kBAC9BhH,EAAQ,kBAAC,IAAD,CAAUa,GAAI1D,EAAEC,MAAMC,UAE/B,IAGH4C,qBAAU,WACJsO,IACFC,EAAYQ,UACZ/D,GAAc,MAEf,CAACsD,IAEJ,IAAMzJ,EAAU,CACd,CACEzC,MAAO,iFACP0C,UAAW,QACX9C,IAAK,QACLR,OAAQ,SAACkJ,GAAD,gBAA0BA,EAA1B,yBAEV,CACEtI,MAAO,+DACPJ,IAAK,YACL8C,UAAW,YACXtD,OAAQ,SAACkJ,GAAD,gBAA0BA,KAEpC,CACEtI,MAAO,SACPJ,IAAK,MACLR,OAAQ,SAACkJ,EAAWsE,GAAZ,OACN,kBAAC,KAAD,CAAOzM,KAAK,UACV,kBAAC,IAAD,CACE0M,QAAM,EACN1Q,QAAS,WACPuQ,EAAe,CACb9N,UAAW,CACTkO,IAAKxE,EAAKwE,KAEZtC,QAAS,CACPC,QAAS,CACPC,cAAezM,OAAOC,aAAayG,QAAQ,qBAG9C0B,MAAK,WACNuC,GAAc,QAbpB,cAuBR,OACE,6BACGlL,GAAQ,KACT,kBAAC,IAAD,CAAO+E,QAASA,EAAS/B,WAAU,UAAEyL,EAAYpO,YAAd,aAAE,EAAkBsO,0BCpB9CU,GArFgB,SAAC1N,GAAwB,IAC9C2N,EAAWC,cAAXD,OAD6C,EAEjBhQ,oBAAS,GAFQ,mBAE9CkP,EAF8C,KAElCtD,EAFkC,OAGf5L,mBAAS,IAHM,mBAG9CkQ,EAH8C,KAGjCC,EAHiC,KAmCrD,OA9BA5M,QAAQC,IAAI0L,GAEZ3N,YAAW,WACT4O,EAAe,6GAAD,OAIQH,EAAOpK,cAJf,gkBAyBb,KAGD,oCACE,kBAAC,KAAD,CAAYnH,MAAO,CAAE2R,OAAQ,WAC3B,kBAAC,KAAWvR,KAAZ,iBACA,kBAAC,KAAWA,KAAZ,KAAkBmR,IAEpB,yBAAKpJ,UAAU,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKmH,KAAM,IACT,kBAAC,KAAD,CAAWsC,KAAI,yeAMHH,EANG,8EAanB,kBAAC,IAAD,CAAK5J,OAAQ,CAAC,GAAI,KAChB,kBAAC,IAAD,CAAKE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAIC,GAAI,IAC7B,kBAAC,IAAD,CAAM1D,MAAM,kHACV,kBAAC,GAAD,CAASiE,OAAM,UAAK+I,EAAL,YAGnB,kBAAC,IAAD,CAAKxJ,GAAI,GAAID,GAAI,GAAIE,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CAAM1D,MAAM,gJACV,kBAAC,GAAD,CAAYiE,OAAQ+I,EAAQpE,cAAeA,OAIjD,6BACA,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKpF,GAAI,GAAID,GAAI,GAAIE,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CAAM1D,MAAM,+CACV,kBAAC,GAAD,CAAaiE,OAAQ+I,EAAQd,WAAYA,EAAYtD,cAAeA,OAI1E,6BACA,gC,kKCpFA0E,GAAUlI,KAAVkI,MAOFzK,GAAoBlG,cAAH,MA6FR4Q,GAnFuB,WAAoB,IAAD,EACfvQ,qBADe,mBAChDwQ,EADgD,KAClCC,EADkC,OAEDzQ,oBAAS,GAFR,mBAEhD0Q,EAFgD,KAE3BC,EAF2B,OAGjB3Q,qBAHiB,gCAIfA,sBAJe,mBAMjD4Q,GANiD,UAMlC1K,mBAASL,KA6C9B,OA5CAjF,qBAAU,WACR,IAAKgQ,EAAa/P,QAAS,CAAC,IAAD,IACnBgQ,EAAS,UAAGD,EAAa7P,YAAhB,iBAAG,EAAmBoF,qBAAtB,aAAG,EAAkC3D,KAAI,gBAAGyE,EAAH,EAAGA,OAAH,MAAkC,CAAE6J,UAAW7J,EAAQA,OAAO,GAAD,OAAKA,EAAOrB,cAAZ,OAAgCmL,OAAQ,OAC7JN,EAAgBI,GAChBF,GAAuB,MAExB,CAACC,EAAa/P,UAEjBD,qBAAU,WACRW,YAAW,WACT,IAAMyP,EAAS,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAchO,KAAI,SAACyO,EAAQ1R,GAAT,mBAAC,eAChC0R,GAD+B,IAElCF,OAAO,qIAAD,OAKgBE,EAAOhK,OALvB,glBAsBgC1H,EAtBhC,6CA2BRkR,EAAgBO,KACf,OACF,CAACN,IAIF,6BACE,kBAAC,IAAD,CAAKpK,OAAQ,CAAC,GAAI,KAAlB,OAEIkK,QAFJ,IAEIA,OAFJ,EAEIA,EAAchO,KAAI,SAACyO,EAAQ1R,GAAT,OAChB,oCACE,kBAAC,IAAD,CAAKwO,KAAM,IACT,kBAACuC,GAAD,CAAOY,MAAO,GACXD,EAAOhK,OACR,kBAAC,IAAD,CAAQ/H,KAAK,OAAOiS,KAAMrT,EAAE0B,aAAaxB,KAAKgJ,QAAQ,UAAWiK,EAAOH,WAAY7N,KAAM,kBAAC,IAAD,CAAiBA,KAAMmO,OAA6B,0BAAM3S,MAAO,CAAE4S,YAAa,KAA5B,WAC9I,kBAAC,IAAD,CAAQnS,KAAK,OAAOiS,KAAI,wCAAmCF,EAAOH,UAAUQ,MAAM,KAAK,IAAMxE,OAAO,SAAS7J,KAAM,kBAAC,IAAD,CAAiBA,KAAMsO,OAAuB,0BAAM9S,MAAO,CAAE4S,YAAa,KAA5B,YAEnK,kBAAC,KAAD,CAAWhB,KAAI,0HAEiB9Q,EAFjB,gIAG8E0R,EAAOhK,OAHrF,qFAGwKgK,EAAOhK,OAH/K,sOAMLgK,EAAOF,OANF,0FClFhBzO,KAAa,CAC1B,CACEtE,KAAMF,EAAEyB,MAAMvB,KACdY,OAAQ0I,GACRrF,UAAWpC,GAEb,CACE7B,KAAMF,EAAE0B,aAAaxB,KACrBY,OAAQ0I,GACRrF,UAAW8N,IAEb,CACE/R,KAAMF,EAAE2B,cAAczB,KACtBY,OAAQ0I,GACRrF,UAAWsO,MCZTiB,GAAe,IAAIC,eAAa,CACpCC,IAAI,GAAD,OAAK5J,kCAAL,iBACH6J,MAAO,IAAIC,kBAGGC,cAaDC,OAXf,WACE,OACE,kBAAC,iBAAD,CAAgBC,OAAQP,IACtB,kBAAC,IAAD,KACGQ,EACAC,MCVWC,QACW,cAA7BjR,OAAOkR,SAASC,UAEe,UAA7BnR,OAAOkR,SAASC,UAEhBnR,OAAOkR,SAASC,SAASC,MACvB,2DCZNC,IAASlQ,OAAO,kBAAC,GAAD,MAASmQ,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtJ,MAAK,SAAAuJ,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxP,QAAQwP,MAAMA,EAAM9T,c","file":"static/js/main.7346c6e9.chunk.js","sourcesContent":["import RouteItem from '../router';\n\nexport interface RouteList {\n  login: RouteItem;\n}\n\nconst mainLink = '/login';\n\nconst R: RouteList = {\n  login: {\n    link: `${mainLink}`,\n    name: 'Login',\n  },\n};\n\nexport default R;\n","import { Input, Button, Form } from 'antd';\nimport { FormInstance } from 'antd/lib/form/Form';\nimport React from 'react';\n\ninterface LineIDProps {\n  show: boolean;\n  form: FormInstance;\n  toggle: () => any;\n}\n\nconst LineID: React.FC<LineIDProps> = ({\n  show, form, toggle,\n}): JSX.Element => {\n  const onFinish = async (): Promise<void> => {\n    await form.validateFields();\n    toggle();\n  };\n\n  return (\n    <div style={{ display: show ? 'block' : 'none' }}>\n      <Form\n        form={form}\n        style={{ width: '100%' }}\n        name=\"basic\"\n        layout=\"vertical\"\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[{ required: show, message: 'Please input your user account!' }]}\n        >\n          <Input />\n        </Form.Item>\n        <Button type=\"primary\" onClick={onFinish}>\n          Send Verify Code\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default LineID;\n","import { Input, Button, Form } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport React from 'react';\n\ninterface VerifyCodeProps {\n  show: boolean;\n  form: FormInstance;\n  toggle: () => any;\n  toggleBack: () => any;\n}\n\nconst VerifyCode: React.FC<VerifyCodeProps> = ({ show, form, toggle, toggleBack }): JSX.Element => {\n  const goBack = () => {\n    toggleBack();\n  };\n\n  const verifyHandle = () => {\n    toggle();\n  };\n\n  return (\n    <div style={{ display: show ? 'block' : 'none' }}>\n      <Form\n        form={form}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          label=\"Verify Code\"\n          name=\"code\"\n          rules={[{ required: show, message: 'Please input your code!' }]}\n        >\n          <Input />\n        </Form.Item>\n        <div>\n          <Button type=\"ghost\" onClick={goBack} style={{ float: 'left' }}>\n            Back\n          </Button>\n          <Button type=\"primary\" onClick={verifyHandle}>\n            Verify\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default VerifyCode;\n","import RouteItem from '../router';\n\nexport interface RouteList {\n  index: RouteItem;\n  cryptoSymbol: RouteItem;\n  tradingViewer: RouteItem;\n}\n\nconst mainLink = '';\n\nconst R: RouteList = {\n  index: {\n    link: '/',\n    name: 'Investor',\n  },\n  cryptoSymbol: {\n    link: '/crypto/symbol/:Symbol',\n    name: 'Crypto',\n  },\n  tradingViewer: {\n    link: '/crypto/tradingviewer',\n    name: 'TradingViewer',\n  },\n};\n\nexport default R;\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Form, Input, Button, Checkbox, notification, message,\n} from 'antd';\nimport './less/index.less';\nimport {\n  gql, useLazyQuery, useMutation, useQuery,\n} from '@apollo/client';\nimport { Redirect } from 'react-router';\nimport LineID from './component/LineID';\nimport VerifyCode from './component/VerifyCode';\nimport R from '../../routers/investor/Router';\n\nconst LOGIN_USERNAME = gql`\n  query login_username($username: String!) {\n    login_username(username:$username)\n  }\n`;\n\nconst CHECK_CODE = gql`\n  query check_code_by_username($username: String!, $code:String!) {\n    check_code_by_username(username: $username, code: $code) {\n      access_token\n      username\n    }\n  }\n`;\n\nconst Index: React.FC = (): JSX.Element => {\n  const [form] = Form.useForm();\n  const [lineidShow, setLineidShow] = useState(true);\n  const [verifyCode, setVerifyCode] = useState(false);\n\n  const [loginUsernameFC, loginUsername] = useLazyQuery(LOGIN_USERNAME);\n  const [checkCodeFC, checkCode] = useLazyQuery(CHECK_CODE);\n\n  const [goTo, setGoTo] = useState<JSX.Element>();\n\n  useEffect(() => {\n    if (loginUsername.loading) {\n      message.info('กรุณาตรวจสอบ code ใน line ของท่าน');\n    }\n  }, [loginUsername.loading]);\n\n  useEffect(() => {\n    if (checkCode.loading) {\n      message.info('กำลังทำการตรวจสอบ');\n    }\n    if (checkCode.data) {\n      message.success('login สำเร็จ');\n      window.localStorage.setItem('authorization', `Bearer ${checkCode.data?.check_code_by_username.access_token}`);\n      window.localStorage.setItem('username', `${checkCode.data?.check_code_by_username.username}`);\n      setTimeout(() => {\n        setGoTo(<Redirect to={R.index.link} />);\n      }, 1000);\n    }\n  }, [checkCode.loading]);\n\n  // {\n  //   \"username\": \"\",\n  //   \"code\": \"\"\n  // }\n  // const [loginUsername, { loading, error, data }] = useQuery(LOGIN_USERNAME, {\n  //   // variables: { username: 'mosogrean' },\n  //   // context: {\n  //   //   headers: {\n  //   //     'Auth': 'application/json',\n  //   //   },\n  //   // },\n  // });\n\n  const toggle = (number: number) => {\n    const value = form.getFieldsValue();\n    switch (number) {\n      case 1:\n        loginUsernameFC({ variables: { username: value.username } });\n        break;\n      case 2:\n        checkCodeFC({\n          variables: {\n            username: value.username,\n            code: value.code,\n          },\n        });\n        break;\n      default:\n        break;\n    }\n    setLineidShow(!lineidShow);\n    setVerifyCode(!verifyCode);\n  };\n\n  return (\n    <div id=\"login-form\">\n      {goTo || null}\n      <LineID show={lineidShow} form={form} toggle={(): void => { toggle(1); }} />\n      <VerifyCode show={verifyCode} form={form} toggle={(): void => { toggle(2); }} toggleBack={(): void => { toggle(3); }} />\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { ReactElement, FunctionComponent } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\ntype Props = {\n  component: any;\n  layout: any;\n  // All other props\n  [x: string]: any;\n};\n\nconst LayoutRoute: FunctionComponent<Props> = ({ component: Component, layout: Layout, ...rest }): ReactElement => (\n  <Route\n    {...rest}\n    render={(props) => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n);\n\nexport default LayoutRoute;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport LayoutRoute from '../layout/LayoutRoute';\n\nexport interface IRouterRender {\n  link: string;\n  layout: React.FC<{}>;\n  component: React.FC<{}>;\n}\n\nexport const RouterRender = (\n  routers: Array<IRouterRender>,\n): any => routers.map(\n  (router: IRouterRender) => (\n    <LayoutRoute\n      exact\n      path={router.link}\n      layout={router.layout}\n      component={router.component}\n      key={uuidv4()}\n    />\n  ),\n);\n","import React from 'react';\n\nconst LoginLayout: React.FC = (props): JSX.Element => {\n  const { children } = props;\n  return (\n    <>\n      {children}\n    </>\n  );\n};\n\nexport default LoginLayout;\n","import React from 'react';\nimport R from './Router';\nimport Index from '../../page/guest/Index';\nimport { RouterRender } from '../routerRender';\nimport LoginLayout from '../../layout/LoginLayout';\n\nexport default RouterRender([\n  {\n    link: R.login.link,\n    layout: LoginLayout,\n    component: Index,\n  },\n]);\n","import { faBalanceScaleRight, faCoins } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, List } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface ILists {\n  setFormular: any;\n}\n\nconst data = [\n  {\n    title: 'คำนวณหากำไร PROFIT',\n    icon: <FontAwesomeIcon icon={faBalanceScaleRight} size=\"2x\" />,\n    to: 'profit',\n  },\n  {\n    title: 'คำนวณหาราคาซื้อจากจำนวนเหรียญ',\n    icon: <FontAwesomeIcon icon={faCoins} size=\"2x\" />,\n    to: 'coins',\n  },\n];\n\nconst Lists: React.FC<ILists> = ({ setFormular }) => {\n  console.log(1);\n  return (\n    <>\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={(item) => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={item.icon}\n              title={<Button type=\"link\" onClick={() => { setFormular(item.to); }}>{item.title}</Button>}\n            />\n          </List.Item>\n        )}\n      />\n    </>\n  );\n};\n\nexport default Lists;\n","/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport React from 'react';\nimport Lists from './formularComponent/Lists';\n\ninterface IFormular {\n  setFormular: any;\n}\n\nconst Formular: React.FC<IFormular> = ({ setFormular }) => {\n  return (\n    <div>\n      <Lists setFormular={setFormular} />\n    </div>\n  );\n};\n\nexport default Formular;\n","import {\n  Divider, Input, Card, Descriptions, Form,\n} from 'antd';\nimport form from 'antd/lib/form';\nimport React, { useState, useEffect } from 'react';\n\nconst Profit = () => {\n  const [formValue, setFormValue] = useState<any>(false);\n  const [descDeposit, setDescDeposit] = useState<any>();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    const value: {cash: number; crypto_buy: number; crypto_sale: number; fee: number} = form.getFieldsValue();\n    const valFee = (100 - value.fee) / 100;\n    const amount = (value.cash * valFee) / value.crypto_buy;\n    const receive = (amount * value.crypto_sale) * valFee;\n    const profit = receive - value.cash;\n    setDescDeposit({\n      amount,\n      receive,\n      profit,\n    });\n  }, [formValue]);\n\n  return (\n    <>\n      <Divider>กำไร</Divider>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        initialValues={{ fee: 0.25 }}\n      >\n        <Form.Item\n          label=\"จำนวนเงินที่ต้องการซื้อ\"\n          rules={[{ required: true }]}\n          name=\"cash\"\n        >\n          <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n        </Form.Item>\n        <Form.Item\n          label=\"ราคาซื้อ crypto\"\n          rules={[{ required: true }]}\n          name=\"crypto_buy\"\n        >\n          <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n        </Form.Item>\n        <Form.Item\n          label=\"ราคาขาย crypto\"\n          rules={[{ required: true }]}\n          name=\"crypto_sale\"\n        >\n          <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n        </Form.Item>\n        <Form.Item\n          label=\"fee\"\n          name=\"fee\"\n        >\n          <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n        </Form.Item>\n      </Form>\n      {\n              descDeposit?.amount ? (\n                <Card style={{ marginTop: 10 }}>\n                  <Descriptions layout=\"vertical\">\n                    <Descriptions.Item label=\"เหรียญที่ได้ทั้งหมด\">{descDeposit?.amount || null}</Descriptions.Item>\n                    <Descriptions.Item label=\"ขายแล้วจะได้\">{descDeposit?.receive || null}</Descriptions.Item>\n                    <Descriptions.Item label=\"เป็นกำไรสุทธิ\">{descDeposit?.profit || null}</Descriptions.Item>\n                  </Descriptions>\n                </Card>\n              ) : null\n            }\n    </>\n  );\n};\n\nexport default Profit;\n","import {\n  Divider, Form, Input, Card, Descriptions,\n} from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nconst Coins = () => {\n  const [form] = Form.useForm();\n  const [formValue, setFormValue] = useState<any>(false);\n  const [bahtUse, setBahtUse] = useState<number>(0);\n\n  useEffect(() => {\n    const value: {coins: number; crypto_buy: number; fee: number } = form.getFieldsValue();\n    const valFee = (100 - value.fee) / 100;\n    const baht = (value.coins * value.crypto_buy) / valFee;\n    setBahtUse(Math.ceil(baht));\n  }, [formValue]);\n\n  return (\n    <>\n      <Divider>เหรียญ</Divider>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        initialValues={{ fee: 0.25 }}\n      >\n        <Form.Item\n          label=\"จำนวนเหรียญที่ต้องการซื้อ\"\n          rules={[{ required: true }]}\n          name=\"coins\"\n        >\n          <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n        </Form.Item>\n        <Form.Item\n          label=\"ราคาซื้อต่อเหรียญ\"\n          rules={[{ required: true }]}\n          name=\"crypto_buy\"\n        >\n          <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n        </Form.Item>\n        <Form.Item\n          label=\"fee\"\n          name=\"fee\"\n        >\n          <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n        </Form.Item>\n      </Form>\n      {\n              bahtUse ? (\n                <Card style={{ marginTop: 10 }}>\n                  <Descriptions layout=\"vertical\">\n                    <Descriptions.Item label=\"ราคาบาทที่ต้องใช้\">\n                      {bahtUse || null}\n                      {' '}\n                      บาท\n                    </Descriptions.Item>\n                  </Descriptions>\n                </Card>\n              ) : null\n            }\n    </>\n  );\n};\n\nexport default Coins;\n","import {\n  Row,\n  Card,\n  Table,\n  Button,\n  Col,\n} from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport R from '../../routers/investor/Router';\nimport './less/index.less';\nimport Formular from './component/Formular';\nimport { useQuery, gql } from '@apollo/client';\nimport Profit from './component/formularComponent/Profit';\nimport Coins from './component/formularComponent/Coins';\n\nconst columns = [\n  {\n    title: 'สกุลเงิน',\n    dataIndex: 'title',\n    key: 'title',\n    render: (elem: string): JSX.Element => (<strong>{elem.toUpperCase()}</strong>),\n  },\n  {\n    title: '',\n    dataIndex: 'symbol',\n    key: 'symbol',\n    render: (elem: string): JSX.Element => (<strong>{elem.toUpperCase()}</strong>),\n  },\n];\n\n// export const CryptoSymbolData = [\n//   {\n//     key: '1',\n//     title: 'BITCOIN',\n//     crypto: 'BTC_THB',\n//   }, {\n//     key: '2',\n//     title: 'ETHREUM',\n//     crypto: 'ETH_THB',\n//   },\n//   {\n//     key: '3',\n//     title: 'XRP',\n//     crypto: 'XRP_THB',\n//   },\n//   {\n//     key: '4',\n//     title: 'OMG',\n//     crypto: 'OMG_THB',\n//   },\n// ];\n\nconst GET_SYMBOL_CRYPTO = gql`\n  query {\n    symbol_crypto {\n      title\n      symbol\n      status\n    }\n  }\n`;\n\nconst Index: React.FC = (): JSX.Element => {\n  const [goToPath, setGoToPath] = useState<JSX.Element>();\n  const [formular, setFormular] = useState<'profit' | 'coins'>('coins');\n  const symbolCryptos = useQuery(GET_SYMBOL_CRYPTO);\n\n  const CryptoSymbolList = symbolCryptos.data?.symbol_crypto?.map((val: any, index: number) => ({\n    key: index,\n    ...val,\n  }));\n\n  const formularCheck = (): JSX.Element => {\n    switch (formular) {\n      case 'profit':\n        return (<Profit />);\n      case 'coins':\n        return (<Coins />);\n      default:\n        return (<></>);\n    }\n  };\n\n  return (\n    <>\n      {goToPath || null}\n      <Row\n        justify=\"space-around\"\n        gutter={[16, {\n          xs: 8, sm: 16, md: 24, lg: 32,\n        }]}\n      >\n        <Col xs={24} sm={24} md={24} lg={12}>\n          <Card\n            title=\"CRYPTOCURRENCY\"\n            style={{ width: '100%' }}\n            extra={(\n              <>\n                <Button\n                  type=\"link\"\n                  onClick={() => {\n                    setGoToPath(<Redirect to={R.tradingViewer.link} />);\n                  }}\n                >\n                  view tradingviwer\n                </Button>\n              </>\n          )}\n          >\n            <Table\n              className=\"table-check\"\n              columns={columns}\n              dataSource={CryptoSymbolList}\n              onRow={(record, rowIndex) => ({\n                onClick: (): void => {\n                  setGoToPath(<Redirect to={R.cryptoSymbol.link.replace(':Symbol', record.symbol.toUpperCase())} />);\n                }, // click row\n              })}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={24} md={24} lg={12}>\n          <Card title=\"คำนวน\">\n            <Formular setFormular={setFormular} />\n            {formularCheck()}\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport {\n  Layout, Menu, Breadcrumb, Button,\n} from 'antd';\nimport { Link } from 'react-router-dom';\nimport R from '../routers/investor/Router';\nimport RLogin from '../routers/guest/Router';\nimport './less/main-layout.less';\n\nconst { Header, Content, Footer } = Layout;\n\nconst MainLayout: React.FC = (props): JSX.Element => {\n  const { children } = props;\n  return (\n    <Layout className=\"layout\">\n      <Header style={{ background: '#FFF' }}>\n        <div className=\"logo\" />\n        <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n          <Menu.Item key=\"1\"><Link to={R.index.link}>Investor</Link></Menu.Item>\n          <div style={{ float: 'right' }}>\n            {\n              window.localStorage.getItem('username')\n                ? <Button type=\"link\">{window.localStorage.getItem('username')}</Button>\n                : <Button type=\"link\"><Link to={RLogin.login.link}>Login</Link></Button>\n            }\n          </div>\n        </Menu>\n      </Header>\n      <hr />\n      <Content>\n        <div className=\"site-layout-content\">\n          {children}\n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>\n        MosoLab ©2021\n        Tradingboard\n        {' '}\n        {process.env.REACT_APP_VERSION}\n      </Footer>\n    </Layout>\n  );\n};\n\nexport default MainLayout;\n","import {\n  Button, InputNumber, Select, Space, Typography, Col, Row,\n} from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { TradingAPI, ResolutionType, SymbolType } from '../../../api/bitkub';\n\nconst { Option, OptGroup } = Select;\n\nconst { Text } = Typography;\n\nconst timeConverter = (UNIX_timestamp: any): string => {\n  const a = new Date(UNIX_timestamp * 1000);\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const year = a.getFullYear();\n  const month = months[a.getMonth()];\n  const date = a.getDate();\n  const hour = a.getHours();\n  const min = a.getMinutes();\n  const sec = a.getSeconds();\n  const time = `${date} ${month} ${year} ${hour}:${min}:${sec}`;\n  return time;\n};\n\ninterface LineBTCProps {\n  symbol: string;\n}\n\nconst LineBTC: React.FC<LineBTCProps> = ({ symbol }): JSX.Element => {\n  const [stateLabels, setStateLabels] = useState([]);\n  const [stateData, setStateData] = useState([]);\n\n  const [resolution, setResolution] = useState<ResolutionType>('1');\n  const [periodOfTime, setPeriodOfTime] = useState(1);\n\n  const setData = (): void => {\n    const unixTime = moment().unix();\n    TradingAPI(symbol as SymbolType, resolution, unixTime - periodOfTime * 1800, unixTime).then((result: any) => {\n      setStateLabels(result.t.map((unix: any) => timeConverter(unix)).concat([null, null, null, null]));\n      setStateData(result.c);\n    });\n  };\n\n  useEffect(() => {\n    setData();\n  }, []);\n\n  const state = {\n    labels: stateLabels,\n    datasets: [\n      {\n        label: 'Trading Line',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: stateData,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Row gutter={[16, 24]}>\n        <Col sm={24} xs={24} md={12} lg={12}>\n          <Text>ระยะต่อ 1 ช่อง:</Text>\n          <Select\n            defaultValue=\"1\"\n            style={{ width: 120 }}\n            onChange={(value: any) => {\n              setResolution(value);\n            }}\n          >\n            <OptGroup label=\"นาที\">\n              <Option value=\"1\">1 นาที</Option>\n              <Option value=\"5\">5 นาที</Option>\n              <Option value=\"15\">15 นาที</Option>\n              <Option value=\"30\">30 นาที</Option>\n            </OptGroup>\n            <OptGroup label=\"ชั่วโมง\">\n              <Option value=\"60\">1 ชั่วโมง</Option>\n              <Option value=\"240\">4 ชั่วโมง</Option>\n            </OptGroup>\n            <OptGroup label=\"วัน\">\n              <Option value=\"1D\">1 วัน</Option>\n            </OptGroup>\n          </Select>\n        </Col>\n        <Col sm={24} xs={24} md={12} lg={12}>\n          <Text>ช่วงเวลาทั้งหมด: </Text>\n          <InputNumber min={1} max={300} defaultValue={1} onChange={(value: any) => { setPeriodOfTime(value); }} />\n          <Text> ชั่วโมง</Text>\n        </Col>\n        <Col>\n          <Button\n            type=\"primary\"\n            onClick={(): void => {\n              setData();\n            }}\n          >\n            ปรับค่า\n          </Button>\n        </Col>\n      </Row>\n      <Row>\n        <Line\n          data={state}\n          options={{\n            title: {\n              display: true,\n              text: 'Average Price value per Time',\n              fontSize: 20,\n            },\n            legend: {\n              display: true,\n              position: 'right',\n            },\n          }}\n        />\n      </Row>\n    </div>\n  );\n};\n\nexport default LineBTC;\n","import axios from 'axios';\nimport moment from 'moment';\n\nexport type SymbolType = 'BTC_THB';\nexport type ResolutionType = '1' | '5' | '15' | '30' | '60' | '240' | '1D';\n\nexport const TradingAPI = (symbol: SymbolType, resolution: ResolutionType, from: number, to: number): any => axios.get(`https://tradingview.bitkub.com/tradingview/history?symbol=${symbol}&resolution=${resolution}&from=${from}&to=${to}`).then((res: any): any => res.data);\n\nexport const TradingTimeSelectAPI = (symbol: SymbolType, unixTime: number): any => {\n  const resolution: ResolutionType = '15';\n  return axios.get(`https://tradingview.bitkub.com/tradingview/history?symbol=${symbol}&resolution=${resolution}&from=${unixTime}&to=${unixTime}`).then((res: any): any => res.data);\n};\n\nexport const TradingNowAPI = (symbol: SymbolType): any => {\n  const resolution: ResolutionType = '15';\n  const unixTime = moment().unix();\n  return axios.get(`https://tradingview.bitkub.com/tradingview/history?symbol=${symbol}&resolution=${resolution}&from=${unixTime}&to=${unixTime}`).then((res: any): any => res.data);\n};\n\nexport default null;\n","/* eslint-disable react/prop-types */\n/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport {\n  faMoneyBillAlt, faClock, faCommentAlt,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Divider, Row, Col, Radio, Input, DatePicker, Space, Badge, Card, Button, Modal, Descriptions,\n} from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router';\nimport R from '../../../routers/guest/Router';\n\ninterface TickerFormProps {\n  symbol: string;\n  setResetTable: (is: boolean) => any;\n}\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\ninterface IInputPrice {\n  price: any;\n  threshold: string;\n}\n\ninterface IInputMain {\n  notification_times: any;\n  detail: string;\n}\n\nconst ADD_TICKER = gql`\n  mutation crypto_add_symbol_value_check(\n    $symbol: String!\n    $price: Float!\n    $times: Float!\n    $alert_msg: String!\n  ) {\n    crypto_add_symbol_value_check(\n      symbol: $symbol, \n      price: $price, \n      times: $times, \n      alert_msg: $alert_msg\n    )\n}\n`;\n\nconst TickerForm: React.FC<TickerFormProps> = ({ symbol, setResetTable }): JSX.Element => {\n  const [type, setType] = useState('purchase_price');\n  const [showPriceOrPoint, setshowPriceOrPoint] = useState('price');\n  const [inputPrice, setInputPrice] = useState<IInputPrice>({} as IInputPrice);\n  const [inputMain, setInputMain] = useState<IInputMain>({ notification_times: 3 } as IInputMain);\n  const [point1, setPoint1] = useState({\n    date: '', unix: 0, price: 0,\n  });\n  const [point2, setPoint2] = useState({\n    date: '', unix: 0, price: 0,\n  });\n\n  const [goTo, setGoTo] = useState<JSX.Element>();\n\n  const [visibleModal, setVisibleModal] = useState(false);\n\n  const RadioOnClineHandle = (e: any, show: string) => {\n    setshowPriceOrPoint(show);\n    setType(e.target.value);\n  };\n\n  const [addTicker] = useMutation(ADD_TICKER);\n\n  // useEffect(() => {\n  //   const time = new Date(point1.date).getTime() / 1000;\n  //   // eslint-disable-next-line no-restricted-globals\n  //   if (!isNaN(time) && point1.unix === 0) {\n  //     const unixTime = moment.unix(time).unix();\n  //     TradingTimeSelectAPI(symbol as SymbolType, unixTime).then((result: any) => {\n  //       setPoint1({ ...point1, price: result.c[0] });\n  //     });\n  //   }\n  // }, [point1.date]);\n\n  // useEffect(() => {\n  //   const time = new Date(point1.date).getTime() / 1000;\n  //   // eslint-disable-next-line no-restricted-globals\n  //   if (!isNaN(time) && point2.unix === 0) {\n  //     const unixTime = moment.unix(time).unix();\n  //     TradingTimeSelectAPI('BTC_THB', unixTime).then((result: any) => {\n  //       setPoint2({ ...point2, price: result.c[0] });\n  //     });\n  //   }\n  // }, [point1.date]);\n\n  //   `{\n  //   symbol: 'XLM',\n  //   price: 9.33,\n  //   threshold: 0.02,\n  //   alert: 'ไปถอน',\n  //   now: moment().unix(),\n  // }`\n  const handleOk = () => {\n    if (!window.localStorage.getItem('authorization')) {\n      setGoTo(<Redirect to={R.login.link} />);\n    } else {\n      switch (type) {\n        case 'purchase_price':\n          addTicker({\n            variables: {\n              symbol: symbol.toLowerCase(),\n              price: parseFloat(inputPrice.price),\n              times: parseFloat(inputMain.notification_times),\n              alert_msg: inputMain.detail,\n            },\n            context: {\n              headers: {\n                Authorization: window.localStorage.getItem('authorization'),\n              },\n            },\n          });\n\n          break;\n        case 'selling_price':\n          addTicker({\n            variables: {\n              symbol: symbol.toLowerCase(),\n              price: inputPrice.price,\n              times: inputMain.notification_times,\n              alert_msg: inputMain.detail,\n            },\n          });\n          break;\n        default:\n          break;\n      }\n      setTimeout(() => {\n        setVisibleModal(false);\n        setResetTable(true);\n      }, 1000);\n    }\n  };\n\n  const modalDetail = () => {\n    switch (type) {\n      case 'purchase_price':\n        return (\n          <>\n            <Descriptions title=\"ราคาที่ต้องการซื้อ\" bordered>\n              <Descriptions.Item label=\"ราคาบันทึก\" span={3}>\n                {inputPrice.price}\n                {' '}\n                บาท\n              </Descriptions.Item>\n              <Descriptions.Item label=\"แจ้งเตือนทั้งหมด\" span={3}>\n                {inputMain.notification_times}\n                {' '}\n                ครั้ง\n              </Descriptions.Item>\n              <Descriptions.Item label=\"ข้อความการแจ้งเตือน\" span={3}>\n                {inputMain.detail}\n              </Descriptions.Item>\n            </Descriptions>\n          </>\n        );\n      case 'selling_price':\n        return (\n          <>\n            <Descriptions title=\"ราคาที่ต้องการขาย\" bordered>\n              <Descriptions.Item label=\"ราคาบันทึก\" span={3}>\n                {inputPrice.price}\n                {' '}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"แจ้งเตือนทั้งหมด\" span={3}>\n                {inputMain.notification_times}\n                {' '}\n                ครั้ง\n              </Descriptions.Item>\n              <Descriptions.Item label=\"ข้อความการแจ้งเตือน\" span={3}>\n                {inputMain.detail}\n              </Descriptions.Item>\n            </Descriptions>\n          </>\n        );\n      default:\n        break;\n    }\n  };\n  return (\n    <div>\n      {goTo || null}\n      <Modal\n        title=\"ตรวจสอบรายการ\"\n        visible={visibleModal}\n        onOk={handleOk}\n        onCancel={() => { setVisibleModal(!visibleModal); }}\n        okText=\"บันทึกรายการ\"\n        cancelText=\"ยกเลิก\"\n        width=\"75%\"\n      >\n        {modalDetail()}\n      </Modal>\n      <Divider orientation=\"left\">กำหนดรูปแบบ</Divider>\n      <Row>\n        <Col sm={24} xs={24} md={24} lg={24}>\n          <Radio.Group defaultValue=\"purchase_price\" buttonStyle=\"solid\">\n            <Radio.Button value=\"purchase_price\" onClick={(e): any => { RadioOnClineHandle(e, 'price'); }}>\n              ราคาที่ต้องการ\n              <strong>ซื้อ</strong>\n            </Radio.Button>\n            <Radio.Button value=\"selling_price\" onClick={(e): any => { RadioOnClineHandle(e, 'price'); }}>\n              ราคาที่ต้องการ\n              <strong>ขาย</strong>\n            </Radio.Button>\n            <Radio.Button disabled value=\"support_line\" onClick={(e): any => { RadioOnClineHandle(e, 'point'); }}>\n              เส้น\n              <strong>แนวรับ</strong>\n            </Radio.Button>\n            <Radio.Button disabled value=\"resistance_line\" onClick={(e): any => { RadioOnClineHandle(e, 'point'); }}>\n              เส้น\n              <strong>แนวต้าน</strong>\n            </Radio.Button>\n          </Radio.Group>\n        </Col>\n      </Row>\n      <Divider orientation=\"left\">กำหนดราคาหรือตำแหน่งเวลา</Divider>\n      <Row style={{ display: showPriceOrPoint === 'price' ? 'block' : 'none' }}>\n        <Col span={24}>\n          <span>ราคาที่ต้องการแจ้งเตือนต่อหน่วย</span>\n          <Input\n            prefix={<FontAwesomeIcon icon={faMoneyBillAlt} />}\n            addonAfter=\"บาท\"\n            allowClear\n            type=\"number\"\n            onChange={(e: any) => { setInputPrice({ ...inputPrice, price: e.target.value as number }); }}\n          />\n        </Col>\n      </Row>\n      <Row style={{ display: showPriceOrPoint === 'point' ? 'block' : 'none' }}>\n        <Col span={24}>\n          <Space>\n            <span>จุดที่ 1:</span>\n            <DatePicker showTime onChange={(value: any) => { setPoint1({ ...point1, date: value.format('YYYY-MM-DDTHH:mm:ss') }); }} />\n          </Space>\n        </Col>\n        <br />\n        <Col span={24}>\n          <span>\n            <Badge.Ribbon text=\"ราคา ณ จุดที่ 1\">\n              <Card>\n                {point1.price}\n                {' '}\n                บาท\n              </Card>\n            </Badge.Ribbon>\n          </span>\n        </Col>\n        <br />\n        <Col span={24}>\n          <Space>\n            <span>จุดที่ 2:</span>\n            <DatePicker showTime onChange={(value: any) => { setPoint2({ ...point1, date: value.format('YYYY-MM-DDTHH:mm:ss') }); }} />\n          </Space>\n        </Col>\n        <br />\n        <Col span={24}>\n          <span>\n            <Badge.Ribbon text=\"ราคา ณ จุดที่ 2\">\n              <Card>\n                {point2.price}\n                {' '}\n                บาท\n              </Card>\n            </Badge.Ribbon>\n          </span>\n        </Col>\n        <br />\n      </Row>\n      <Divider orientation=\"left\">การแจ้งเตือน</Divider>\n      <Row>\n        <Col span={24}>\n          <Input\n            value={3}\n            defaultValue={3}\n            prefix={<FontAwesomeIcon icon={faClock} />}\n            addonAfter=\"ครั้ง\"\n            allowClear\n            type=\"number\"\n            onChange={(e: any) => { setInputMain({ ...inputMain, notification_times: e.target.value }); }}\n          />\n        </Col>\n      </Row>\n      <Divider orientation=\"left\">ข้อความ</Divider>\n      <Row>\n        <Input\n          prefix={<FontAwesomeIcon icon={faCommentAlt} />}\n          allowClear\n          onChange={(e: any) => { setInputMain({ ...inputMain, detail: e.target.value }); }}\n        />\n      </Row>\n      <br />\n      <Row justify=\"end\">\n        <Button type=\"primary\" onClick={() => setVisibleModal(!visibleModal)}>บันทึกรายการ</Button>\n      </Row>\n    </div>\n  );\n};\n\nexport default TickerForm;\n","/* eslint-disable react/display-name */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport React, { useEffect, useState } from 'react';\nimport {\n  Table, Tag, Space, Button,\n} from 'antd';\nimport { gql, useLazyQuery, useMutation, useQuery } from '@apollo/client';\nimport { Redirect } from 'react-router';\nimport R from '../../../routers/guest/Router';\n\ninterface ITickerTableProps {\n  symbol: string;\n  setResetTable: (is: boolean) => any;\n  resetTable: boolean;\n}\n\nconst LIST_TICKERS = gql`\n  query tickers_crypto_symbol($symbol: String!) {\n    tickers_crypto_symbol(symbol:$symbol) {\n      _id\n      symbol\n      price\n      alert_msg\n    }\n  }\n`;\n\nconst DELETE_TICKER = gql`\n  mutation delete_ticker_crypto($_id: String!) {\n    delete_ticker_crypto(_id: $_id) {\n      _id\n      symbol\n      price\n      alert_msg\n    }\n  }\n`;\n\nconst TickerTable: React.FC<ITickerTableProps> = ({ symbol, setResetTable, resetTable }): JSX.Element => {\n  // console.log(symbol);\n  const [data, setData] = useState([]);\n  const listTickers = useQuery(LIST_TICKERS, {\n    variables: {\n      symbol: symbol.toLowerCase(),\n    },\n    context: {\n      headers: {\n        Authorization: window.localStorage.getItem('authorization'),\n      },\n    },\n    onCompleted: () => {\n      setData(listTickers.data?.tickers_crypto_symbol || []);\n    },\n  });\n  const [deleteTickerFC, deleteTicker] = useMutation(DELETE_TICKER, {\n    update(catach, fetchData) {\n      setData(fetchData.data?.delete_ticker_crypto || []);\n    },\n  });\n  const [goTo, setGoTo] = useState<JSX.Element>();\n\n  useEffect(() => {\n    if (window.localStorage.getItem('authorization') === null) {\n      setGoTo(<Redirect to={R.login.link} />);\n    }\n  }, []);\n\n\n  useEffect(() => {\n    if (resetTable) {\n      listTickers.refetch();\n      setResetTable(false);\n    }\n  }, [resetTable]);\n\n  const columns = [\n    {\n      title: 'ราคาแจ้งเตือน',\n      dataIndex: 'price',\n      key: 'price',\n      render: (text: any): string => `${text} บาท`,\n    },\n    {\n      title: 'รายละเอียด',\n      key: 'alert_msg',\n      dataIndex: 'alert_msg',\n      render: (text: any): string => `${text}`,\n    },\n    {\n      title: 'Action',\n      key: '_id',\n      render: (text: any, _record: any): JSX.Element => (\n        <Space size=\"middle\">\n          <Button\n            danger\n            onClick={(): void => {\n              deleteTickerFC({\n                variables: {\n                  _id: text._id,\n                },\n                context: {\n                  headers: {\n                    Authorization: window.localStorage.getItem('authorization'),\n                  },\n                },\n              }).then(() => {\n                setResetTable(true);\n              });\n            }}\n          >\n            Delete\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n  return (\n    <div>\n      {goTo || null}\n      <Table columns={columns} dataSource={listTickers.data?.tickers_crypto_symbol} />\n    </div>\n  );\n};\n\nexport default TickerTable;\n","import {\n  Breadcrumb,\n  Card,\n  Col,\n  Row,\n  Space,\n  Typography,\n} from 'antd';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport InnerHTML from 'dangerously-set-html-content';\nimport LineBTC from './component/LineBTC';\nimport TickerForm from './component/TickerForm';\nimport TickerTable from './component/TickerTable';\n\nconst CryptoSymbol: React.FC = (props): JSX.Element => {\n  const { Symbol } = useParams();\n  const [resetTable, setResetTable] = useState(true);\n  const [viewBitcoin, setViewBitcoin] = useState('');\n\n  console.log(resetTable)\n\n  setTimeout(() => {\n    setViewBitcoin(`new TradingView.widget(\n      {\n      \"width\": \"100%\",\n      \"height\": \"660\",\n      \"symbol\": \"BITKUB:${Symbol.toUpperCase()}THB\",\n      \"interval\": \"15\", //240\n      \"timezone\": \"Asia/Bangkok\",\n      \"theme\": \"light\",\n      \"style\": \"1\",\n      \"locale\": \"th_TH\",\n      \"toolbar_bg\": \"#f1f3f6\",\n      \"enable_publishing\": false,\n      \"withdateranges\": true,\n      \"hide_side_toolbar\": false,\n      \"allow_symbol_change\": true,\n      \"details\": true,\n      \"studies\": [\n        \"MACD@tv-basicstudies\",\n        \"RSI@tv-basicstudies\",\n        \"BB@tv-basicstudies\",\n        \"BollingerBandsWidth@tv-basicstudies\"\n      ],\n      \"container_id\": \"tradingview_5a28d\"\n    }\n      );`);\n  }, 1000);\n\n  return (\n    <>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>Investor</Breadcrumb.Item>\n        <Breadcrumb.Item>{Symbol}</Breadcrumb.Item>\n      </Breadcrumb>\n      <div className=\"investor-content\">\n        <Row>\n          <Col span={24}>\n            <InnerHTML html={`\n                  <div class=\"tradingview-widget-container\">\n                  <div id=\"tradingview_5a28d\"></div>\n                  <div class=\"tradingview-widget-copyright\"><a href=\"https://www.tradingview.com/symbols/ETHTHB/?exchange=BITKUB\" rel=\"noopener\" target=\"_blank\"></a> by TradingView</div>\n                  <script type=\"text/javascript\" src=\"https://s3.tradingview.com/tv.js\"></script>\n                  <script type=\"text/javascript\">\n                      ${viewBitcoin}\n                  </script>\n                </div>\n              `}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 24]}>\n          <Col sm={0} xs={0} md={24} lg={12}>\n            <Card title=\"กราฟ ณ​ เวลาปัจจุบัน\">\n              <LineBTC symbol={`${Symbol}_THB`} />\n            </Card>\n          </Col>\n          <Col sm={24} xs={24} md={24} lg={12}>\n            <Card title=\"ราคาที่ต้องการจะ Ticker ไปยัง  Line\">\n              <TickerForm symbol={Symbol} setResetTable={setResetTable} />\n            </Card>\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <Row>\n          <Col sm={24} xs={24} md={24} lg={24}>\n            <Card title=\"รายการ Ticker\">\n              <TickerTable symbol={Symbol} resetTable={resetTable} setResetTable={setResetTable} />\n            </Card>\n          </Col>\n        </Row>\n        <br />\n        <br />\n      </div>\n    </>\n  );\n};\n\nexport default CryptoSymbol;\n","import React, { useState, useEffect } from 'react';\nimport InnerHTML from 'dangerously-set-html-content';\nimport {\n  Row, Col, Typography, Button,\n} from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt, faExternalLinkSquareAlt, faTasks } from '@fortawesome/free-solid-svg-icons';\nimport { gql, useQuery } from '@apollo/client';\nimport R from '../../routers/investor/Router';\n\nconst { Title } = Typography;\n\ninterface INewCrypto {\n  oldSymbol: string;\n  symbol: string;\n  script: string;\n}\nconst GET_SYMBOL_CRYPTO = gql`\n  query {\n    symbol_crypto {\n      title\n      symbol\n      status\n    }\n  }\n`;\n\nconst CryptoTradingViewer: React.FC = (): JSX.Element => {\n  const [tradingViews, setTradingViews] = useState<INewCrypto[]>();\n  const [isTradingViewsMount, setIsTradingViewsMount] = useState(false);\n  const [viewBitcoin, setViewBitcoin] = useState<string>();\n  const [viewBitcoin2, setViewBitcoin2] = useState<string>();\n\n  const symbolCrypto = useQuery(GET_SYMBOL_CRYPTO);\n  useEffect(() => {\n    if (!symbolCrypto.loading) {\n      const newCrypto = symbolCrypto.data?.symbol_crypto?.map(({ symbol }: any): INewCrypto => ({ oldSymbol: symbol, symbol: `${symbol.toUpperCase()}THB`, script: '' }));\n      setTradingViews(newCrypto);\n      setIsTradingViewsMount(true);\n    }\n  }, [symbolCrypto.loading]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const addScript = tradingViews?.map((crypto, index): INewCrypto => ({\n        ...crypto,\n        script: `\n        new TradingView.widget(\n          {\n          \"width\": \"100%\",\n          \"height\": 610,\n          \"symbol\": \"BITKUB:${crypto.symbol}\",\n          \"interval\": \"15\", //240\n          \"timezone\": \"Asia/Bangkok\",\n          \"theme\": \"light\",\n          \"style\": \"1\",\n          \"locale\": \"th_TH\",\n          \"toolbar_bg\": \"#f1f3f6\",\n          \"enable_publishing\": false,\n          \"withdateranges\": true,\n          \"allow_symbol_change\": true,\n          \"details\": true,\n          \"studies\": [\n            \"MACD@tv-basicstudies\",\n            \"RSI@tv-basicstudies\",\n            \"BB@tv-basicstudies\",\n            \"BollingerBandsWidth@tv-basicstudies\"\n          ],\n          \"container_id\": \"tradingview_5a28d${index}\"\n        }\n          );\n        `,\n      }));\n      setTradingViews(addScript);\n    }, 1000);\n  }, [isTradingViewsMount]);\n\n\n  return (\n    <div>\n      <Row gutter={[16, 24]}>\n        {\n          tradingViews?.map((crypto, index) => (\n            <>\n              <Col span={12}>\n                <Title level={2}>\n                  {crypto.symbol}\n                  <Button type=\"link\" href={R.cryptoSymbol.link.replace(':Symbol', crypto.oldSymbol)} icon={<FontAwesomeIcon icon={faExternalLinkSquareAlt} />}><span style={{ paddingLeft: 12 }}>MANAGE</span></Button>\n                  <Button type=\"link\" href={`https://www.bitkub.com/market/${crypto.oldSymbol.split('_')[0]}`} target=\"_blank\" icon={<FontAwesomeIcon icon={faExternalLinkAlt} />}><span style={{ paddingLeft: 12 }}>BITKUB</span></Button>\n                </Title>\n                <InnerHTML html={`\n                    <div class=\"tradingview-widget-container\">\n                    <div id=\"tradingview_5a28d${index}\"></div>\n                    <div class=\"tradingview-widget-copyright\"><a href=\"https://www.tradingview.com/symbols/${crypto.symbol}/?exchange=BITKUB\" rel=\"noopener\" target=\"_blank\"><span class=\"blue-text\">${crypto.symbol} Chart</span></a> by TradingView</div>\n                    <script type=\"text/javascript\" src=\"https://s3.tradingview.com/tv.js\"></script>\n                    <script type=\"text/javascript\">\n                        ${crypto.script}\n                    </script>\n                  </div>\n                `}\n                />\n              </Col>\n            </>\n          ))\n        }\n      </Row>\n    </div>\n  );\n};\n\nexport default CryptoTradingViewer;\n","import React from 'react';\nimport R from './Router';\nimport Index from '../../page/investor/Index';\nimport { RouterRender } from '../routerRender';\nimport MainLayout from '../../layout/MainLayout';\nimport CryptoSymbol from '../../page/investor/CryptoSymbol';\nimport CryptoTradingViewer from '../../page/investor/CryptoTradingViewer';\n\nexport default RouterRender([\n  {\n    link: R.index.link,\n    layout: MainLayout,\n    component: Index,\n  },\n  {\n    link: R.cryptoSymbol.link,\n    layout: MainLayout,\n    component: CryptoSymbol,\n  },\n  {\n    link: R.tradingViewer.link,\n    layout: MainLayout,\n    component: CryptoTradingViewer,\n  },\n]);\n","import React, { ReactElement } from 'react';\nimport './App.less';\nimport {\n  BrowserRouter, HashRouter, Redirect, Router, Switch,\n} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\nimport GuestRouter from './routers/guest/GuestRouter';\nimport InvestorRouter from './routers/investor/InvestorRouter';\n\nconst clientApollo = new ApolloClient({\n  uri: `${process.env.REACT_APP_BACKEND}/api/v1/graph`,\n  cache: new InMemoryCache(),\n});\n\nconst history = createBrowserHistory();\n\nfunction App(): ReactElement {\n  return (\n    <ApolloProvider client={clientApollo}>\n      <HashRouter>\n        {GuestRouter}\n        {InvestorRouter}\n      </HashRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}