{"version":3,"sources":["routers/guest/Router.ts","page/guest/component/LineID.tsx","page/guest/component/VerifyCode.tsx","page/guest/Index.tsx","layout/LayoutRoute.tsx","routers/routerRender.tsx","layout/LoginLayout.tsx","routers/guest/GuestRouter.tsx","routers/investor/Router.ts","page/investor/Index.tsx","layout/MainLayout.tsx","api/bitkub.ts","page/investor/component/LineBTC.tsx","page/investor/component/TickerForm.tsx","page/investor/component/TickerTable.tsx","page/investor/CryptoSymbol.tsx","page/investor/CryptoTradingViewer.tsx","routers/investor/InvestorRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["R","login","link","name","LineID","show","form","toggle","onFinish","a","validateFields","style","display","width","layout","Item","label","rules","required","message","type","onClick","VerifyCode","float","console","log","Index","Form","useForm","useState","lineidShow","setLineidShow","verifyCode","setVerifyCode","id","LayoutRoute","Component","component","Layout","rest","render","props","RouterRender","routers","map","router","exact","path","key","uuidv4","LoginLayout","children","index","cryptoSymbol","tradingViewer","columns","title","dataIndex","CryptoSymbolData","crypto","justify","extra","href","className","dataSource","onRow","record","rowIndex","window","location","replace","Header","Content","Footer","MainLayout","background","theme","mode","defaultSelectedKeys","to","padding","textAlign","TradingTimeSelectAPI","symbol","unixTime","axios","get","then","res","data","Option","Select","OptGroup","Text","Typography","LineBTC","stateLabels","setStateLabels","stateData","setStateData","resolution","setResolution","periodOfTime","setPeriodOfTime","setData","moment","unix","from","TradingAPI","result","t","UNIX_timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","timeConverter","concat","c","useEffect","state","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","marginBottom","defaultValue","onChange","value","max","options","text","fontSize","legend","position","TickerForm","setType","showPriceOrPoint","setshowPriceOrPoint","inputPrice","setInputPrice","inputMain","setInputMain","price","point1","setPoint1","point2","setPoint2","visibleModal","setVisibleModal","RadioOnClineHandle","e","target","time","getTime","isNaN","visible","onOk","onCancel","okText","cancelText","bordered","span","Number","threshold","notification_times","detail","modalDetail","orientation","Group","buttonStyle","Button","prefix","icon","faMoneyBillAlt","addonAfter","allowClear","faBell","showTime","format","Ribbon","faClock","faCommentAlt","size","age","address","tags","TickerTable","CryptoSymbol","Symbol","useParams","viewBitcoin","setViewBitcoin","setTimeout","split","join","margin","offset","html","Title","CryptoTradingViewer","tradingViews","setTradingViews","isTradingViewsMount","setIsTradingViewsMount","newCrypto","oldSymbol","script","addScript","gutter","level","faExternalLinkSquareAlt","paddingLeft","faExternalLinkAlt","history","createBrowserHistory","App","basename","GuestRouter","InvestorRouter","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a0caa359.chunk.js","sourcesContent":["import RouteItem from '../router';\n\nexport interface RouteList {\n  login: RouteItem;\n}\n\nconst mainLink = '/login';\n\nconst R: RouteList = {\n  login: {\n    link: `${mainLink}`,\n    name: 'Login',\n  },\n};\n\nexport default R;\n","import { Input, Button, Form } from 'antd';\nimport { FormInstance } from 'antd/lib/form/Form';\nimport React from 'react';\n\ninterface LineIDProps {\n  show: boolean;\n  form: FormInstance;\n  toggle: () => any;\n}\n\nconst LineID: React.FC<LineIDProps> = ({ show, form, toggle }): JSX.Element => {\n  const onFinish = async (): Promise<void> => {\n    const a = await form.validateFields();\n    toggle();\n  };\n\n  return (\n    <div style={{ display: show ? 'block' : 'none' }}>\n      <Form\n        form={form}\n        style={{ width: '100%' }}\n        name=\"basic\"\n        layout=\"vertical\"\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Line Account ID\"\n          name=\"lineId\"\n          rules={[{ required: show, message: 'Please input your line account id!' }]}\n        >\n          <Input />\n        </Form.Item>\n        <Button type=\"primary\" onClick={onFinish}>\n          Send Verify Code\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default LineID;\n","import { Input, Button, Form } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport React from 'react';\n\ninterface VerifyCodeProps {\n  show: boolean;\n  form: FormInstance;\n  toggle: () => any;\n}\n\nconst VerifyCode: React.FC<VerifyCodeProps> = ({ show, form, toggle }): JSX.Element => {\n  const goBack = () => {\n    toggle();\n  };\n\n  const verifyHandle = () => {\n    console.log(1);\n  };\n\n  return (\n    <div style={{ display: show ? 'block' : 'none' }}>\n      <Form\n        form={form}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          label=\"Verify Code\"\n          name=\"code\"\n          rules={[{ required: show, message: 'Please input your code!' }]}\n        >\n          <Input />\n        </Form.Item>\n        <div>\n          <Button type=\"ghost\" onClick={goBack} style={{float: 'left'}}>\n            Back\n          </Button>\n          <Button type=\"primary\" onClick={verifyHandle}>\n            Verify\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default VerifyCode;\n","import React, { useState } from 'react';\nimport {\n  Form, Input, Button, Checkbox,\n} from 'antd';\nimport './less/index.less';\nimport LineID from './component/LineID';\nimport VerifyCode from './component/VerifyCode';\n\nconst Index: React.FC = (): JSX.Element => {\n  const [form] = Form.useForm();\n  const [lineidShow, setLineidShow] = useState(true);\n  const [verifyCode, setVerifyCode] = useState(false);\n\n  const toggle = () => {\n    setLineidShow(!lineidShow);\n    setVerifyCode(!verifyCode);\n  };\n\n  return (\n    <div id=\"login-form\">\n      <LineID show={lineidShow} form={form} toggle={(): void => { toggle(); }} />\n      <VerifyCode show={verifyCode} form={form} toggle={(): void => { toggle(); }} />\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { ReactElement, FunctionComponent } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\ntype Props = {\n  component: any;\n  layout: any;\n  // All other props\n  [x: string]: any;\n};\n\nconst LayoutRoute: FunctionComponent<Props> = ({ component: Component, layout: Layout, ...rest }): ReactElement => (\n  <Route\n    {...rest}\n    render={(props) => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n);\n\nexport default LayoutRoute;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport LayoutRoute from '../layout/LayoutRoute';\n\nexport interface IRouterRender {\n  link: string;\n  layout: React.FC<{}>;\n  component: React.FC<{}>;\n}\n\nexport const RouterRender = (\n  routers: Array<IRouterRender>,\n): any => routers.map(\n  (router: IRouterRender) => (\n    <LayoutRoute\n      exact\n      path={router.link}\n      layout={router.layout}\n      component={router.component}\n      key={uuidv4()}\n    />\n  ),\n);\n","import React from 'react';\n\nconst LoginLayout: React.FC = (props): JSX.Element => {\n  const { children } = props;\n  return (\n    <>\n      {children}\n    </>\n  );\n};\n\nexport default LoginLayout;\n","import React from 'react';\nimport R from './Router';\nimport Index from '../../page/guest/Index';\nimport { RouterRender } from '../routerRender';\nimport LoginLayout from '../../layout/LoginLayout';\n\nexport default RouterRender([\n  {\n    link: R.login.link,\n    layout: LoginLayout,\n    component: Index,\n  },\n]);\n","import RouteItem from '../router';\n\nexport interface RouteList {\n  index: RouteItem;\n  cryptoSymbol: RouteItem;\n  tradingViewer: RouteItem;\n}\n\nconst mainLink = '';\n\nconst R: RouteList = {\n  index: {\n    link: `${mainLink}/`,\n    name: 'Investor',\n  },\n  cryptoSymbol: {\n    link: `${mainLink}/crypto/symbol/:Symbol`,\n    name: 'Crypto',\n  },\n  tradingViewer: {\n    link: `${mainLink}/crypto/tradingviewer`,\n    name: 'TradingViewer',\n  },\n};\n\nexport default R;\n","import {\n  Tag, Space, Row, Card, Table, Button,\n} from 'antd';\nimport React, { useState } from 'react';\nimport R from '../../routers/investor/Router';\nimport './less/index.less';\n\nconst columns = [\n  {\n    title: 'สกุลเงิน',\n    dataIndex: 'title',\n    key: 'title',\n  },\n];\n\nexport const CryptoSymbolData = [\n  {\n    key: '1',\n    title: 'BITCOIN',\n    crypto: 'BTC_THB',\n  }, {\n    key: '2',\n    title: 'ETHREUM',\n    crypto: 'ETH_THB',\n  },\n  {\n    key: '3',\n    title: 'XRP',\n    crypto: 'XRP_THB',\n  },\n  {\n    key: '4',\n    title: 'OMG',\n    crypto: 'OMG_THB',\n  },\n];\n\nconst Index: React.FC = (): JSX.Element => {\n  const [resetTable, setResetTable] = useState(false);\n  return (\n    <>\n      <Row justify=\"space-around\">\n        <Card\n          title=\"CRYPTOCURRENCY\"\n          style={{ width: '50%' }}\n          extra={(<><Button type=\"link\" href={R.tradingViewer.link}>view tradingviwer</Button></>)}\n        >\n          <Table\n            className=\"table-check\"\n            columns={columns}\n            dataSource={CryptoSymbolData}\n            onRow={(record, rowIndex) => ({\n              onClick: (): void => {\n                window.location.href = R.cryptoSymbol.link.replace(':Symbol', record.crypto);\n              }, // click row\n            })}\n          />\n        </Card>\n      </Row>\n    </>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport {\n  Layout, Menu, Breadcrumb, Button,\n} from 'antd';\nimport { Link } from 'react-router-dom';\nimport R from '../routers/investor/Router';\n\nconst { Header, Content, Footer } = Layout;\n\nconst MainLayout: React.FC = (props): JSX.Element => {\n  const { children } = props;\n  return (\n    <Layout className=\"layout\">\n      <Header style={{ background: '#FFF' }}>\n        <div className=\"logo\" />\n        <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n          <Menu.Item key=\"1\"><Link to={R.index.link}>Investor</Link></Menu.Item>\n          <div style={{ float: 'right' }}>\n            <Button type=\"link\">Login</Button>\n          </div>\n        </Menu>\n      </Header>\n      <hr />\n      <Content style={{ padding: '0 50px' }}>\n        <div className=\"site-layout-content\">\n          {children}\n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>MosoLab ©2021</Footer>\n    </Layout>\n  );\n};\n\nexport default MainLayout;\n","import axios from 'axios';\nimport moment from 'moment';\n\nexport type SymbolType = 'BTC_THB';\nexport type ResolutionType = '1' | '5' | '15' | '30' | '60' | '240' | '1D';\n\nexport const TradingAPI = (symbol: SymbolType, resolution: ResolutionType, from: number, to: number): any => axios.get(`https://tradingview.bitkub.com/tradingview/history?symbol=${symbol}&resolution=${resolution}&from=${from}&to=${to}`).then((res: any): any => res.data);\n\nexport const TradingTimeSelectAPI = (symbol: SymbolType, unixTime: number): any => {\n  const resolution: ResolutionType = '15';\n  return axios.get(`https://tradingview.bitkub.com/tradingview/history?symbol=${symbol}&resolution=${resolution}&from=${unixTime}&to=${unixTime}`).then((res: any): any => res.data);\n};\n\nexport const TradingNowAPI = (symbol: SymbolType): any => {\n  const resolution: ResolutionType = '15';\n  const unixTime = moment().unix();\n  return axios.get(`https://tradingview.bitkub.com/tradingview/history?symbol=${symbol}&resolution=${resolution}&from=${unixTime}&to=${unixTime}`).then((res: any): any => res.data);\n};\n\nexport default null;\n","import {\n  Button, InputNumber, Select, Space, Typography,\n} from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { TradingAPI, ResolutionType, SymbolType } from '../../../api/bitkub';\n\nconst { Option, OptGroup } = Select;\n\nconst { Text } = Typography;\n\nconst timeConverter = (UNIX_timestamp: any): string => {\n  const a = new Date(UNIX_timestamp * 1000);\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const year = a.getFullYear();\n  const month = months[a.getMonth()];\n  const date = a.getDate();\n  const hour = a.getHours();\n  const min = a.getMinutes();\n  const sec = a.getSeconds();\n  const time = `${date} ${month} ${year} ${hour}:${min}:${sec}`;\n  return time;\n};\n\ninterface LineBTCProps {\n  symbol: string;\n}\n\nconst LineBTC: React.FC<LineBTCProps> = ({ symbol }): JSX.Element => {\n  const [stateLabels, setStateLabels] = useState([]);\n  const [stateData, setStateData] = useState([]);\n\n  const [resolution, setResolution] = useState<ResolutionType>('15');\n  const [periodOfTime, setPeriodOfTime] = useState(1);\n\n  const setData = (): void => {\n    const unixTime = moment().unix();\n    TradingAPI(symbol as SymbolType, resolution, unixTime - periodOfTime * 43200, unixTime).then((result: any) => {\n      setStateLabels(result.t.map((unix: any) => timeConverter(unix)).concat([null, null, null, null]));\n      setStateData(result.c);\n    });\n  };\n\n  useEffect(() => {\n    setData();\n  }, []);\n\n  const state = {\n    labels: stateLabels,\n    datasets: [\n      {\n        label: 'Trading Line',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: stateData,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Space style={{ marginBottom: '2%' }}>\n        <Text>ระยะต่อ 1 ช่อง:</Text>\n        <Select\n          defaultValue=\"15\"\n          style={{ width: 120 }}\n          onChange={(value: any) => {\n            setResolution(value);\n          }}\n        >\n          <OptGroup label=\"นาที\">\n            <Option value=\"1\">1 นาที</Option>\n            <Option value=\"5\">5 นาที</Option>\n            <Option value=\"15\">15 นาที</Option>\n            <Option value=\"30\">30 นาที</Option>\n          </OptGroup>\n          <OptGroup label=\"ชั่วโมง\">\n            <Option value=\"60\">1 ชั่วโมง</Option>\n            <Option value=\"240\">4 ชั่วโมง</Option>\n          </OptGroup>\n          <OptGroup label=\"วัน\">\n            <Option value=\"1D\">1 วัน</Option>\n          </OptGroup>\n        </Select>\n        <Text>ช่วงเวลาทั้งหมด: </Text>\n        <InputNumber min={1} max={30} defaultValue={1} onChange={(value: any) => { setPeriodOfTime(value); }} />\n        <Text>วัน</Text>\n        <Button\n          type=\"primary\"\n          onClick={(): void => {\n            setData();\n          }}\n        >\n          ปรับค่า\n        </Button>\n      </Space>\n      <Line\n        data={state}\n        options={{\n          title: {\n            display: true,\n            text: 'Average Price value per Time',\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: 'right',\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default LineBTC;\n","import {\n  faMoneyBillAlt, faClock, faCommentAlt, faBellSlash, faBell,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Divider, Row, Col, Radio, Input, DatePicker, Space, Badge, Card, Button, Modal, Descriptions,\n} from 'antd';\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport {\n  SymbolType, TradingAPI, TradingNowAPI, TradingTimeSelectAPI,\n} from '../../../api/bitkub';\n\ninterface TickerFormProps {\n  symbol: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\ninterface IInputPrice {\n  price: number;\n  threshold: number;\n}\n\ninterface IInputMain {\n  notification_times: number;\n  detail: string;\n}\n\nconst TickerForm: React.FC<TickerFormProps> = ({ symbol }): JSX.Element => {\n  const [type, setType] = useState('purchase_price');\n  const [showPriceOrPoint, setshowPriceOrPoint] = useState('price');\n  const [inputPrice, setInputPrice] = useState<IInputPrice>({} as IInputPrice);\n  const [inputMain, setInputMain] = useState<IInputMain>({} as IInputMain);\n  const [point1, setPoint1] = useState({\n    date: '', unix: 0, price: 0,\n  });\n  const [point2, setPoint2] = useState({\n    date: '', unix: 0, price: 0,\n  });\n\n  const [visibleModal, setVisibleModal] = useState(false);\n\n  const RadioOnClineHandle = (e: any, show: string) => {\n    setshowPriceOrPoint(show);\n    setType(e.target.value);\n  };\n\n  useEffect(() => {\n    const time = new Date(point1.date).getTime() / 1000;\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(time) && point1.unix === 0) {\n      const unixTime = moment.unix(time).unix();\n      TradingTimeSelectAPI(symbol as SymbolType, unixTime).then((result: any) => {\n        setPoint1({ ...point1, price: result.c[0] });\n      });\n    }\n  }, [point1.date]);\n\n  useEffect(() => {\n    const time = new Date(point1.date).getTime() / 1000;\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(time) && point2.unix === 0) {\n      const unixTime = moment.unix(time).unix();\n      TradingTimeSelectAPI('BTC_THB', unixTime).then((result: any) => {\n        setPoint2({ ...point2, price: result.c[0] });\n      });\n    }\n  }, [point1.date]);\n\n//   `{\n//   symbol: 'XLM',\n//   price: 9.33,\n//   threshold: 0.02,\n//   alert: 'ไปถอน',\n//   now: moment().unix(),\n// }`\n  const handleOk = () => {\n    // send api\n  };\n\n  const modalDetail = () => {\n    switch (type) {\n      case 'purchase_price':\n        return (\n          <>\n            <Descriptions title=\"ราคาที่ต้องการซื้อ\" bordered>\n              <Descriptions.Item label=\"ราคาบันทึก\" span={3}>{inputPrice.price}</Descriptions.Item>\n              <Descriptions.Item label=\"ราคาแจ้งเตือนระหว่าง\" span={3}>\n                <Space>\n                  {Number(inputPrice.price) + Number(inputPrice.threshold)}\n                  ,\n                  {inputPrice.price - inputPrice.threshold}\n                </Space>\n              </Descriptions.Item>\n              <Descriptions.Item label=\"แจ้งเตือนทั้งหมด\" span={3}>\n                {inputMain.notification_times}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"รายละเอียดการแจ้งเตือน\" span={3}>\n                {inputMain.detail}\n              </Descriptions.Item>\n            </Descriptions>\n          </>\n        );\n      default:\n        break;\n    }\n  };\n  console.log(inputPrice);\n  return (\n    <div>\n      <Modal\n        title=\"ตรวจสอบรายการ\"\n        visible={visibleModal}\n        onOk={handleOk}\n        onCancel={() => { setVisibleModal(!visibleModal); }}\n        okText=\"บันทึกรายการ\"\n        cancelText=\"ยกเลิก\"\n        width=\"75%\"\n      >\n        {modalDetail()}\n      </Modal>\n      <Divider orientation=\"left\">กำหนดรูปแบบ</Divider>\n      <Row>\n        <Col span={24}>\n          <Radio.Group defaultValue=\"purchase_price\" buttonStyle=\"solid\">\n            <Radio.Button value=\"purchase_price\" onClick={(e): any => { RadioOnClineHandle(e, 'price'); }}>\n              ราคาที่ต้องการ\n              <strong>ซื้อ</strong>\n            </Radio.Button>\n            <Radio.Button value=\"selling_price\" onClick={(e): any => { RadioOnClineHandle(e, 'price'); }}>\n              ราคาที่ต้องการ\n              <strong>ขาย</strong>\n            </Radio.Button>\n            <Radio.Button value=\"support_line\" onClick={(e): any => { RadioOnClineHandle(e, 'point'); }}>\n              เส้น\n              <strong>แนวรับ</strong>\n            </Radio.Button>\n            <Radio.Button value=\"resistance_line\" onClick={(e): any => { RadioOnClineHandle(e, 'point'); }}>\n              เส้น\n              <strong>แนวต้าน</strong>\n            </Radio.Button>\n          </Radio.Group>\n        </Col>\n      </Row>\n      <Divider orientation=\"left\">กำหนดราคาหรือตำแหน่งเวลา</Divider>\n      <Row style={{ display: showPriceOrPoint === 'price' ? 'block' : 'none' }}>\n        <Col span={24}>\n          <span>ราคาที่ต้องการแจ้งเตือนต่อหน่วย</span>\n          <Input\n            defaultValue=\"0\"\n            prefix={<FontAwesomeIcon icon={faMoneyBillAlt} />}\n            addonAfter=\"บาท\"\n            allowClear\n            type=\"number\"\n            onChange={(e: any) => { setInputPrice({ ...inputPrice, price: e.target.value as number }); }}\n          />\n        </Col>\n        <Col span={24}>\n          <span>ระดับราคาที่ต้องการแจ้งเตือน (+/-)</span>\n          <Input\n            defaultValue=\"0\"\n            prefix={<FontAwesomeIcon icon={faBell} />}\n            addonAfter=\"บาท\"\n            allowClear\n            type=\"number\"\n            onChange={(e: any) => { setInputPrice({ ...inputPrice, threshold: e.target.value as number }); }}\n          />\n        </Col>\n      </Row>\n      <Row style={{ display: showPriceOrPoint === 'point' ? 'block' : 'none' }}>\n        <Col span={24}>\n          <Space>\n            <span>จุดที่ 1:</span>\n            <DatePicker showTime onChange={(value: any) => { setPoint1({ ...point1, date: value.format('YYYY-MM-DDTHH:mm:ss') }); }} />\n          </Space>\n        </Col>\n        <br />\n        <Col span={24}>\n          <span>\n            <Badge.Ribbon text=\"ราคา ณ จุดที่ 1\">\n              <Card>\n                {point1.price}\n                {' '}\n                บาท\n              </Card>\n            </Badge.Ribbon>\n          </span>\n        </Col>\n        <br />\n        <Col span={24}>\n          <Space>\n            <span>จุดที่ 2:</span>\n            <DatePicker showTime onChange={(value: any) => { setPoint2({ ...point1, date: value.format('YYYY-MM-DDTHH:mm:ss') }); }} />\n          </Space>\n        </Col>\n        <br />\n        <Col span={24}>\n          <span>\n            <Badge.Ribbon text=\"ราคา ณ จุดที่ 2\">\n              <Card>\n                {point2.price}\n                {' '}\n                บาท\n              </Card>\n            </Badge.Ribbon>\n          </span>\n        </Col>\n        <br />\n      </Row>\n      <Divider orientation=\"left\">การแจ้งเตือน</Divider>\n      <Row>\n        <Col span={24}>\n          <Input\n            defaultValue={3}\n            prefix={<FontAwesomeIcon icon={faClock} />}\n            addonAfter=\"ครั้ง\"\n            allowClear\n            type=\"number\"\n            onChange={(e: any) => { setInputMain({ ...inputMain, notification_times: e.target.value }); }}\n          />\n        </Col>\n      </Row>\n      <Divider />\n      <Row>\n        <Input\n          prefix={<FontAwesomeIcon icon={faCommentAlt} />}\n          allowClear\n          onChange={(e: any) => { setInputMain({ ...inputMain, detail: e.target.value }); }}\n        />\n      </Row>\n      <br />\n      <Row justify=\"end\">\n        <Button type=\"primary\" onClick={() => setVisibleModal(!visibleModal)}>บันทึกรายการ</Button>\n      </Row>\n    </div>\n  );\n};\n\nexport default TickerForm;\n","import React from 'react';\nimport { Table, Tag, Space } from 'antd';\n\nconst columns = [\n  {\n    title: 'วันที่สร้าง',\n    dataIndex: 'date',\n    key: 'date',\n  },\n  {\n    title: 'รูปแบบ',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'ราคาหรือตำแหน่ง',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'รายละเอียด',\n    key: 'tags',\n    dataIndex: 'tags',\n  },\n  {\n    title: 'จำนวนแจ้งเตือนที่เหลือ',\n    key: 'tags',\n    dataIndex: 'tags',\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text: any, record: any) => (\n      <Space size=\"middle\">\n        <a>\n          Invite\n          {record.name}\n        </a>\n        <a>Delete</a>\n      </Space>\n    ),\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser'],\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher'],\n  },\n];\n\nconst TickerTable = () => (\n  <div>\n    <Table columns={columns} dataSource={data} />\n  </div>\n);\n\nexport default TickerTable;\n","import {\n  Breadcrumb,\n  Card,\n  Col,\n  Row,\n  Space,\n  Typography,\n} from 'antd';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport InnerHTML from 'dangerously-set-html-content';\nimport LineBTC from './component/LineBTC';\nimport TickerForm from './component/TickerForm';\nimport TickerTable from './component/TickerTable';\n\nconst CryptoSymbol: React.FC = (props): JSX.Element => {\n  const { Symbol } = useParams();\n  const [resetTable, setResetTable] = useState(false);\n  const [viewBitcoin, setViewBitcoin] = useState('');\n\n  setTimeout(() => {\n    setViewBitcoin(`new TradingView.widget(\n      {\n      \"width\": \"100%\",\n      \"height\": \"660\",\n      \"symbol\": \"BITKUB:${Symbol.split('_').join('')}\",\n      \"interval\": \"60\", //240\n      \"timezone\": \"Asia/Bangkok\",\n      \"theme\": \"light\",\n      \"style\": \"1\",\n      \"locale\": \"th_TH\",\n      \"toolbar_bg\": \"#f1f3f6\",\n      \"enable_publishing\": false,\n      \"withdateranges\": true,\n      \"hide_side_toolbar\": false,\n      \"allow_symbol_change\": true,\n      \"details\": true,\n      \"studies\": [\n        \"MACD@tv-basicstudies\",\n        \"RSI@tv-basicstudies\"\n      ],\n      \"container_id\": \"tradingview_5a28d\"\n    }\n      );`);\n  }, 1000);\n\n  return (\n    <>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>Investor</Breadcrumb.Item>\n        <Breadcrumb.Item>{Symbol}</Breadcrumb.Item>\n      </Breadcrumb>\n      <div className=\"investor-content\">\n        <Row>\n          <Col span={9}>\n            <Card title=\"ราคาที่ต้องการจะ Ticker ไปยัง  Line\">\n              <TickerForm symbol={Symbol} />\n            </Card>\n          </Col>\n          <Col span={14} offset={1}>\n            <Card title=\"กราฟ ณ​ เวลาปัจจุบัน\">\n              <LineBTC symbol={Symbol} />\n            </Card>\n          </Col>\n        </Row>\n        <br/>\n        <Row>\n          <Col span={24}>\n            <InnerHTML html={`\n                  <div class=\"tradingview-widget-container\">\n                  <div id=\"tradingview_5a28d\"></div>\n                  <div class=\"tradingview-widget-copyright\"><a href=\"https://www.tradingview.com/symbols/ETHTHB/?exchange=BITKUB\" rel=\"noopener\" target=\"_blank\"></a> by TradingView</div>\n                  <script type=\"text/javascript\" src=\"https://s3.tradingview.com/tv.js\"></script>\n                  <script type=\"text/javascript\">\n                      ${viewBitcoin}\n                  </script>\n                </div>\n              `}\n            />\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <Row>\n          <Col span={24}>\n            <Card title=\"รายการ Ticker\">\n              <TickerTable />\n            </Card>\n          </Col>\n        </Row>\n        <br />\n        <br />\n      </div>\n    </>\n  );\n};\n\nexport default CryptoSymbol;\n","import React, { useState, useEffect } from 'react';\nimport InnerHTML from 'dangerously-set-html-content';\nimport {\n  Row, Col, Typography, Button,\n} from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt, faExternalLinkSquareAlt, faTasks } from '@fortawesome/free-solid-svg-icons';\nimport { CryptoSymbolData } from './Index';\nimport R from '../../routers/investor/Router';\n\nconst { Title } = Typography;\n\ninterface INewCrypto {\n  oldSymbol: string;\n  symbol: string;\n  script: string;\n}\n\nconst CryptoTradingViewer: React.FC = (): JSX.Element => {\n  const [tradingViews, setTradingViews] = useState<INewCrypto[]>();\n  const [isTradingViewsMount, setIsTradingViewsMount] = useState(false);\n  const [viewBitcoin, setViewBitcoin] = useState<string>();\n  const [viewBitcoin2, setViewBitcoin2] = useState<string>();\n  useEffect(() => {\n    const newCrypto = CryptoSymbolData.map(({ crypto }): INewCrypto => ({ oldSymbol: crypto, symbol: crypto.split('_').join(''), script: '' }));\n    setTradingViews(newCrypto);\n    setIsTradingViewsMount(true);\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const addScript = tradingViews?.map((crypto, index): INewCrypto => ({\n        ...crypto,\n        script: `\n        new TradingView.widget(\n          {\n          \"width\": \"100%\",\n          \"height\": 610,\n          \"symbol\": \"BITKUB:${crypto.symbol}\",\n          \"interval\": \"60\", //240\n          \"timezone\": \"Asia/Bangkok\",\n          \"theme\": \"light\",\n          \"style\": \"1\",\n          \"locale\": \"th_TH\",\n          \"toolbar_bg\": \"#f1f3f6\",\n          \"enable_publishing\": false,\n          \"withdateranges\": true,\n          \"allow_symbol_change\": true,\n          \"details\": true,\n          \"studies\": [\n            \"MACD@tv-basicstudies\",\n            \"RSI@tv-basicstudies\"\n          ],\n          \"container_id\": \"tradingview_5a28d${index}\"\n        }\n          );\n        `,\n      }));\n      setTradingViews(addScript);\n    }, 1000);\n  }, [isTradingViewsMount]);\n\n  console.log(tradingViews);\n\n  return (\n    <div>\n      <Row gutter={[16, 24]}>\n        {\n          tradingViews?.map((crypto, index) => (\n            <>\n              <Col span={12}>\n                <Title level={2}>\n                  {crypto.symbol}\n                  <Button type=\"link\" href={R.cryptoSymbol.link.replace(':Symbol', crypto.oldSymbol)} icon={<FontAwesomeIcon icon={faExternalLinkSquareAlt} />}><span style={{ paddingLeft: 12 }}>MANAGE</span></Button>\n                  <Button type=\"link\" href={`https://www.bitkub.com/market/${crypto.oldSymbol.split('_')[0]}`} target=\"_blank\" icon={<FontAwesomeIcon icon={faExternalLinkAlt} />}><span style={{ paddingLeft: 12 }}>BITKUB</span></Button>\n                </Title>\n                <InnerHTML html={`\n                    <div class=\"tradingview-widget-container\">\n                    <div id=\"tradingview_5a28d${index}\"></div>\n                    <div class=\"tradingview-widget-copyright\"><a href=\"https://www.tradingview.com/symbols/${crypto.symbol}/?exchange=BITKUB\" rel=\"noopener\" target=\"_blank\"><span class=\"blue-text\">${crypto.symbol} Chart</span></a> by TradingView</div>\n                    <script type=\"text/javascript\" src=\"https://s3.tradingview.com/tv.js\"></script>\n                    <script type=\"text/javascript\">\n                        ${crypto.script}\n                    </script>\n                  </div>\n                `}\n                />\n              </Col>\n            </>\n          ))\n        }\n      </Row>\n    </div>\n  );\n};\n\nexport default CryptoTradingViewer;\n","import React from 'react';\nimport R from './Router';\nimport Index from '../../page/investor/Index';\nimport { RouterRender } from '../routerRender';\nimport MainLayout from '../../layout/MainLayout';\nimport CryptoSymbol from '../../page/investor/CryptoSymbol';\nimport CryptoTradingViewer from '../../page/investor/CryptoTradingViewer';\n\nexport default RouterRender([\n  {\n    link: R.index.link,\n    layout: MainLayout,\n    component: Index,\n  },\n  {\n    link: R.cryptoSymbol.link,\n    layout: MainLayout,\n    component: CryptoSymbol,\n  },\n  {\n    link: R.tradingViewer.link,\n    layout: MainLayout,\n    component: CryptoTradingViewer,\n  },\n]);\n","import React, { ReactElement } from 'react';\nimport './App.less';\nimport {\n  BrowserRouter, Redirect, Router, Switch,\n} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport GuestRouter from './routers/guest/GuestRouter';\nimport InvestorRouter from './routers/investor/InvestorRouter';\n\nconst history = createBrowserHistory();\n\nfunction App(): ReactElement {\n  return (\n    <Router history={history}>\n      <BrowserRouter basename=\"tradingboard\">\n        <Switch>\n          {GuestRouter}\n          {InvestorRouter}\n        </Switch>\n      </BrowserRouter>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}