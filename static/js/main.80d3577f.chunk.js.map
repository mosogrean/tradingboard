{"version":3,"sources":["routers/guest/Router.ts","page/guest/component/LineID.tsx","page/guest/component/VerifyCode.tsx","routers/investor/Router.ts","page/guest/Index.tsx","layout/LayoutRoute.tsx","routers/routerRender.tsx","layout/LoginLayout.tsx","routers/guest/GuestRouter.tsx","page/investor/component/formularComponent/Lists.tsx","page/investor/component/Formular.tsx","page/investor/Index.tsx","layout/MainLayout.tsx","api/bitkub.ts","page/investor/component/LineBTC.tsx","page/investor/component/TickerForm.tsx","page/investor/component/TickerTable.tsx","page/investor/CryptoSymbol.tsx","page/investor/CryptoTradingViewer.tsx","routers/investor/InvestorRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["R","login","link","name","LineID","show","form","toggle","onFinish","a","validateFields","style","display","width","layout","Item","label","rules","required","message","type","onClick","VerifyCode","toggleBack","float","index","cryptoSymbol","tradingViewer","LOGIN_USERNAME","gql","CHECK_CODE","Index","Form","useForm","useState","lineidShow","setLineidShow","verifyCode","setVerifyCode","useLazyQuery","loginUsernameFC","loginUsername","checkCodeFC","checkCode","goTo","setGoTo","useEffect","loading","info","data","success","window","localStorage","setItem","check_code_by_username","setTimeout","to","number","value","getFieldsValue","variables","username","code","id","LayoutRoute","Component","component","Layout","rest","render","props","RouterRender","routers","map","router","exact","path","key","uuidv4","LoginLayout","children","title","icon","faBalanceScaleRight","size","Lists","console","log","itemLayout","dataSource","renderItem","item","Meta","avatar","Formular","columns","dataIndex","CryptoSymbolData","crypto","formValue","setFormValue","descDeposit","setDescDeposit","goToPath","setGoToPath","valFee","fee","amount","cash","crypto_buy","receive","crypto_sale","profit","justify","gutter","xs","sm","md","lg","extra","className","onRow","record","rowIndex","replace","initialValues","inputMode","step","onChange","marginTop","Header","Content","Footer","MainLayout","background","theme","mode","defaultSelectedKeys","RLogin","textAlign","TradingTimeSelectAPI","symbol","unixTime","axios","get","then","res","Option","Select","OptGroup","Text","Typography","LineBTC","stateLabels","setStateLabels","stateData","setStateData","resolution","setResolution","periodOfTime","setPeriodOfTime","setData","moment","unix","from","TradingAPI","result","t","UNIX_timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","timeConverter","concat","c","state","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","defaultValue","max","options","text","fontSize","legend","position","TickerForm","setType","showPriceOrPoint","setshowPriceOrPoint","inputPrice","setInputPrice","inputMain","setInputMain","price","point1","setPoint1","point2","setPoint2","visibleModal","setVisibleModal","RadioOnClineHandle","e","target","time","getTime","isNaN","visible","onOk","onCancel","okText","cancelText","bordered","span","notification_times","detail","modalDetail","orientation","Group","buttonStyle","Button","disabled","prefix","faMoneyBillAlt","addonAfter","allowClear","showTime","format","Ribbon","faClock","faCommentAlt","age","address","tags","TickerTable","CryptoSymbol","Symbol","useParams","viewBitcoin","setViewBitcoin","split","join","margin","html","Title","CryptoTradingViewer","tradingViews","setTradingViews","isTradingViewsMount","setIsTradingViewsMount","newCrypto","oldSymbol","script","addScript","level","href","faExternalLinkSquareAlt","paddingLeft","faExternalLinkAlt","clientApollo","ApolloClient","uri","process","cache","InMemoryCache","createBrowserHistory","App","client","GuestRouter","InvestorRouter","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.80d3577f.chunk.js","sourcesContent":["import RouteItem from '../router';\n\nexport interface RouteList {\n  login: RouteItem;\n}\n\nconst mainLink = '/login';\n\nconst R: RouteList = {\n  login: {\n    link: `${mainLink}`,\n    name: 'Login',\n  },\n};\n\nexport default R;\n","import { Input, Button, Form } from 'antd';\nimport { FormInstance } from 'antd/lib/form/Form';\nimport React from 'react';\n\ninterface LineIDProps {\n  show: boolean;\n  form: FormInstance;\n  toggle: () => any;\n}\n\nconst LineID: React.FC<LineIDProps> = ({\n  show, form, toggle,\n}): JSX.Element => {\n  const onFinish = async (): Promise<void> => {\n    await form.validateFields();\n    toggle();\n  };\n\n  return (\n    <div style={{ display: show ? 'block' : 'none' }}>\n      <Form\n        form={form}\n        style={{ width: '100%' }}\n        name=\"basic\"\n        layout=\"vertical\"\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[{ required: show, message: 'Please input your user account!' }]}\n        >\n          <Input />\n        </Form.Item>\n        <Button type=\"primary\" onClick={onFinish}>\n          Send Verify Code\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default LineID;\n","import { Input, Button, Form } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport React from 'react';\n\ninterface VerifyCodeProps {\n  show: boolean;\n  form: FormInstance;\n  toggle: () => any;\n  toggleBack: () => any;\n}\n\nconst VerifyCode: React.FC<VerifyCodeProps> = ({ show, form, toggle, toggleBack }): JSX.Element => {\n  const goBack = () => {\n    toggleBack();\n  };\n\n  const verifyHandle = () => {\n    toggle();\n  };\n\n  return (\n    <div style={{ display: show ? 'block' : 'none' }}>\n      <Form\n        form={form}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          label=\"Verify Code\"\n          name=\"code\"\n          rules={[{ required: show, message: 'Please input your code!' }]}\n        >\n          <Input />\n        </Form.Item>\n        <div>\n          <Button type=\"ghost\" onClick={goBack} style={{ float: 'left' }}>\n            Back\n          </Button>\n          <Button type=\"primary\" onClick={verifyHandle}>\n            Verify\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default VerifyCode;\n","import RouteItem from '../router';\n\nexport interface RouteList {\n  index: RouteItem;\n  cryptoSymbol: RouteItem;\n  tradingViewer: RouteItem;\n}\n\nconst mainLink = '';\n\nconst R: RouteList = {\n  index: {\n    link: '/',\n    name: 'Investor',\n  },\n  cryptoSymbol: {\n    link: '/crypto/symbol/:Symbol',\n    name: 'Crypto',\n  },\n  tradingViewer: {\n    link: '/crypto/tradingviewer',\n    name: 'TradingViewer',\n  },\n};\n\nexport default R;\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Form, Input, Button, Checkbox, notification, message,\n} from 'antd';\nimport './less/index.less';\nimport {\n  gql, useLazyQuery, useMutation, useQuery,\n} from '@apollo/client';\nimport { Redirect } from 'react-router';\nimport LineID from './component/LineID';\nimport VerifyCode from './component/VerifyCode';\nimport R from '../../routers/investor/Router';\n\nconst LOGIN_USERNAME = gql`\n  query login_username($username: String!) {\n    login_username(username:$username)\n  }\n`;\n\nconst CHECK_CODE = gql`\n  query check_code_by_username($username: String!, $code:String!) {\n    check_code_by_username(username: $username, code: $code)\n  }\n`;\n\nconst Index: React.FC = (): JSX.Element => {\n  const [form] = Form.useForm();\n  const [lineidShow, setLineidShow] = useState(true);\n  const [verifyCode, setVerifyCode] = useState(false);\n\n  const [loginUsernameFC, loginUsername] = useLazyQuery(LOGIN_USERNAME);\n  const [checkCodeFC, checkCode] = useLazyQuery(CHECK_CODE);\n\n  const [goTo, setGoTo] = useState<JSX.Element>();\n\n  useEffect(() => {\n    if (loginUsername.loading) {\n      message.info('กรุณาตรวจสอบ code ใน line ของท่าน');\n    }\n  }, [loginUsername.loading]);\n\n  useEffect(() => {\n    if (checkCode.loading) {\n      message.info('กำลังทำการตรวจสอบ');\n    }\n    if (checkCode.data) {\n      message.success('login สำเร็จ');\n      window.localStorage.setItem('authorization', `Bearer ${checkCode.data?.check_code_by_username}`);\n      setTimeout(() => {\n        setGoTo(<Redirect to={R.index.link} />);\n      }, 1000);\n    }\n  }, [checkCode.loading]);\n\n  // {\n  //   \"username\": \"\",\n  //   \"code\": \"\"\n  // }\n  // const [loginUsername, { loading, error, data }] = useQuery(LOGIN_USERNAME, {\n  //   // variables: { username: 'mosogrean' },\n  //   // context: {\n  //   //   headers: {\n  //   //     'Auth': 'application/json',\n  //   //   },\n  //   // },\n  // });\n\n  const toggle = (number: number) => {\n    const value = form.getFieldsValue();\n    switch (number) {\n      case 1:\n        loginUsernameFC({ variables: { username: value.username } });\n        break;\n      case 2:\n        checkCodeFC({\n          variables: {\n            username: value.username,\n            code: value.code,\n          },\n        });\n        break;\n      default:\n        break;\n    }\n    setLineidShow(!lineidShow);\n    setVerifyCode(!verifyCode);\n  };\n\n  return (\n    <div id=\"login-form\">\n      {goTo || null}\n      <LineID show={lineidShow} form={form} toggle={(): void => { toggle(1); }} />\n      <VerifyCode show={verifyCode} form={form} toggle={(): void => { toggle(2); }} toggleBack={(): void => { toggle(3); }} />\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { ReactElement, FunctionComponent } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\ntype Props = {\n  component: any;\n  layout: any;\n  // All other props\n  [x: string]: any;\n};\n\nconst LayoutRoute: FunctionComponent<Props> = ({ component: Component, layout: Layout, ...rest }): ReactElement => (\n  <Route\n    {...rest}\n    render={(props) => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n);\n\nexport default LayoutRoute;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport LayoutRoute from '../layout/LayoutRoute';\n\nexport interface IRouterRender {\n  link: string;\n  layout: React.FC<{}>;\n  component: React.FC<{}>;\n}\n\nexport const RouterRender = (\n  routers: Array<IRouterRender>,\n): any => routers.map(\n  (router: IRouterRender) => (\n    <LayoutRoute\n      exact\n      path={router.link}\n      layout={router.layout}\n      component={router.component}\n      key={uuidv4()}\n    />\n  ),\n);\n","import React from 'react';\n\nconst LoginLayout: React.FC = (props): JSX.Element => {\n  const { children } = props;\n  return (\n    <>\n      {children}\n    </>\n  );\n};\n\nexport default LoginLayout;\n","import React from 'react';\nimport R from './Router';\nimport Index from '../../page/guest/Index';\nimport { RouterRender } from '../routerRender';\nimport LoginLayout from '../../layout/LoginLayout';\n\nexport default RouterRender([\n  {\n    link: R.login.link,\n    layout: LoginLayout,\n    component: Index,\n  },\n]);\n","import { faBalanceScaleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { List } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport React from 'react';\n\nconst data = [\n  {\n    title: 'คำนวนหากำไร PROFIT',\n    icon: <FontAwesomeIcon icon={faBalanceScaleRight} size={'2x'} />,\n  }\n];\n\nconst Lists = () => {\n  console.log(1);\n  return (\n    <>\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={(item) => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={item.icon}\n              title={<a>{item.title}</a>}\n            />\n          </List.Item>\n        )}\n      />\n    </>\n  );\n};\n\nexport default Lists;\n","import React from 'react';\nimport Lists from './formularComponent/Lists';\n\nconst Formular = () => {\n  console.log(1);\n  return (\n    <div>\n      <Lists />\n    </div>\n  );\n};\n\nexport default Formular;\n","import {\n  Tag,\n  Space,\n  Row,\n  Card,\n  Table,\n  Button,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Descriptions,\n} from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport R from '../../routers/investor/Router';\nimport './less/index.less';\nimport Formular from './component/Formular';\n\nconst columns = [\n  {\n    title: 'สกุลเงิน',\n    dataIndex: 'title',\n    key: 'title',\n  },\n];\n\nexport const CryptoSymbolData = [\n  {\n    key: '1',\n    title: 'BITCOIN',\n    crypto: 'BTC_THB',\n  }, {\n    key: '2',\n    title: 'ETHREUM',\n    crypto: 'ETH_THB',\n  },\n  {\n    key: '3',\n    title: 'XRP',\n    crypto: 'XRP_THB',\n  },\n  {\n    key: '4',\n    title: 'OMG',\n    crypto: 'OMG_THB',\n  },\n];\n\nconst Index: React.FC = (): JSX.Element => {\n  const [resetTable, setResetTable] = useState(false);\n  const [formValue, setFormValue] = useState<any>(false);\n  const [descDeposit, setDescDeposit] = useState<any>();\n  const [goToPath, setGoToPath] = useState<JSX.Element>();\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    const value: {cash: number; crypto_buy: number; crypto_sale: number; fee: number} = form.getFieldsValue();\n    const valFee = (100 - value.fee) / 100;\n    const amount = (value.cash * valFee) / value.crypto_buy;\n    const receive = (amount * value.crypto_sale) * valFee;\n    const profit = receive - value.cash;\n    setDescDeposit({\n      amount,\n      receive,\n      profit,\n    });\n  }, [formValue]);\n\n  return (\n    <>\n      {goToPath || null}\n      <Row\n        justify=\"space-around\"\n        gutter={[16, {\n          xs: 8, sm: 16, md: 24, lg: 32,\n        }]}\n      >\n        <Col xs={24} sm={24} md={24} lg={12}>\n          <Card\n            title=\"CRYPTOCURRENCY\"\n            style={{ width: '100%' }}\n            extra={(\n              <>\n                <Button\n                  type=\"link\"\n                  onClick={() => {\n                    setGoToPath(<Redirect to={R.tradingViewer.link} />);\n                  }}\n                >\n                  view tradingviwer\n                </Button>\n              </>\n          )}\n          >\n            <Table\n              className=\"table-check\"\n              columns={columns}\n              dataSource={CryptoSymbolData}\n              onRow={(record, rowIndex) => ({\n                onClick: (): void => {\n                  setGoToPath(<Redirect to={R.cryptoSymbol.link.replace(':Symbol', record.crypto)} />);\n                }, // click row\n              })}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={24} md={24} lg={12}>\n          <Card title=\"คำนวน\">\n            <Formular />\n            <Divider>กำไร</Divider>\n            <Form\n              layout=\"vertical\"\n              form={form}\n              initialValues={{ fee: 0.25 }}\n            >\n              <Form.Item\n                label=\"จำนวนเงินที่ต้องการซื้อ\"\n                rules={[{ required: true }]}\n                name=\"cash\"\n              >\n                <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n              </Form.Item>\n              <Form.Item\n                label=\"ราคาซื้อ crypto\"\n                rules={[{ required: true }]}\n                name=\"crypto_buy\"\n              >\n                <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n              </Form.Item>\n              <Form.Item\n                label=\"ราคาขาย crypto\"\n                rules={[{ required: true }]}\n                name=\"crypto_sale\"\n              >\n                <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n              </Form.Item>\n              <Form.Item\n                label=\"fee\"\n                name=\"fee\"\n              >\n                <Input type=\"number\" inputMode=\"decimal\" step=\"any\" onChange={() => { setFormValue(!formValue); }} />\n              </Form.Item>\n            </Form>\n            {\n              descDeposit?.amount ? (\n                <Card style={{ marginTop: 10 }}>\n                  <Descriptions layout=\"vertical\">\n                    <Descriptions.Item label=\"เหรียญที่ได้ทั้งหมด\">{descDeposit?.amount || null}</Descriptions.Item>\n                    <Descriptions.Item label=\"ขายแล้วจะได้\">{descDeposit?.receive || null}</Descriptions.Item>\n                    <Descriptions.Item label=\"เป็นกำไรสุทธิ\">{descDeposit?.profit || null}</Descriptions.Item>\n                  </Descriptions>\n                </Card>\n              ) : null\n            }\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport {\n  Layout, Menu, Breadcrumb, Button,\n} from 'antd';\nimport { Link } from 'react-router-dom';\nimport R from '../routers/investor/Router';\nimport RLogin from '../routers/guest/Router';\nimport './less/main-layout.less';\n\nconst { Header, Content, Footer } = Layout;\n\nconst MainLayout: React.FC = (props): JSX.Element => {\n  const { children } = props;\n  return (\n    <Layout className=\"layout\">\n      <Header style={{ background: '#FFF' }}>\n        <div className=\"logo\" />\n        <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n          <Menu.Item key=\"1\"><Link to={R.index.link}>Investor</Link></Menu.Item>\n          <div style={{ float: 'right' }}>\n            <Button type=\"link\"><Link to={RLogin.login.link}>Login</Link></Button>\n          </div>\n        </Menu>\n      </Header>\n      <hr />\n      <Content>\n        <div className=\"site-layout-content\">\n          {children}\n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>MosoLab ©2021</Footer>\n    </Layout>\n  );\n};\n\nexport default MainLayout;\n","import axios from 'axios';\nimport moment from 'moment';\n\nexport type SymbolType = 'BTC_THB';\nexport type ResolutionType = '1' | '5' | '15' | '30' | '60' | '240' | '1D';\n\nexport const TradingAPI = (symbol: SymbolType, resolution: ResolutionType, from: number, to: number): any => axios.get(`https://tradingview.bitkub.com/tradingview/history?symbol=${symbol}&resolution=${resolution}&from=${from}&to=${to}`).then((res: any): any => res.data);\n\nexport const TradingTimeSelectAPI = (symbol: SymbolType, unixTime: number): any => {\n  const resolution: ResolutionType = '15';\n  return axios.get(`https://tradingview.bitkub.com/tradingview/history?symbol=${symbol}&resolution=${resolution}&from=${unixTime}&to=${unixTime}`).then((res: any): any => res.data);\n};\n\nexport const TradingNowAPI = (symbol: SymbolType): any => {\n  const resolution: ResolutionType = '15';\n  const unixTime = moment().unix();\n  return axios.get(`https://tradingview.bitkub.com/tradingview/history?symbol=${symbol}&resolution=${resolution}&from=${unixTime}&to=${unixTime}`).then((res: any): any => res.data);\n};\n\nexport default null;\n","import {\n  Button, InputNumber, Select, Space, Typography, Col, Row,\n} from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { TradingAPI, ResolutionType, SymbolType } from '../../../api/bitkub';\n\nconst { Option, OptGroup } = Select;\n\nconst { Text } = Typography;\n\nconst timeConverter = (UNIX_timestamp: any): string => {\n  const a = new Date(UNIX_timestamp * 1000);\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const year = a.getFullYear();\n  const month = months[a.getMonth()];\n  const date = a.getDate();\n  const hour = a.getHours();\n  const min = a.getMinutes();\n  const sec = a.getSeconds();\n  const time = `${date} ${month} ${year} ${hour}:${min}:${sec}`;\n  return time;\n};\n\ninterface LineBTCProps {\n  symbol: string;\n}\n\nconst LineBTC: React.FC<LineBTCProps> = ({ symbol }): JSX.Element => {\n  const [stateLabels, setStateLabels] = useState([]);\n  const [stateData, setStateData] = useState([]);\n\n  const [resolution, setResolution] = useState<ResolutionType>('5');\n  const [periodOfTime, setPeriodOfTime] = useState(10);\n\n  const setData = (): void => {\n    const unixTime = moment().unix();\n    TradingAPI(symbol as SymbolType, resolution, unixTime - periodOfTime * 1800, unixTime).then((result: any) => {\n      setStateLabels(result.t.map((unix: any) => timeConverter(unix)).concat([null, null, null, null]));\n      setStateData(result.c);\n    });\n  };\n\n  useEffect(() => {\n    setData();\n  }, []);\n\n  const state = {\n    labels: stateLabels,\n    datasets: [\n      {\n        label: 'Trading Line',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: stateData,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Row gutter={[16, 24]}>\n        <Col sm={24} xs={24} md={12} lg={12}>\n          <Text>ระยะต่อ 1 ช่อง:</Text>\n          <Select\n            defaultValue=\"5\"\n            style={{ width: 120 }}\n            onChange={(value: any) => {\n              setResolution(value);\n            }}\n          >\n            <OptGroup label=\"นาที\">\n              <Option value=\"1\">1 นาที</Option>\n              <Option value=\"5\">5 นาที</Option>\n              <Option value=\"15\">15 นาที</Option>\n              <Option value=\"30\">30 นาที</Option>\n            </OptGroup>\n            <OptGroup label=\"ชั่วโมง\">\n              <Option value=\"60\">1 ชั่วโมง</Option>\n              <Option value=\"240\">4 ชั่วโมง</Option>\n            </OptGroup>\n            <OptGroup label=\"วัน\">\n              <Option value=\"1D\">1 วัน</Option>\n            </OptGroup>\n          </Select>\n        </Col>\n        <Col sm={24} xs={24} md={12} lg={12}>\n          <Text>ช่วงเวลาทั้งหมด: </Text>\n          <InputNumber min={1} max={300} defaultValue={10} onChange={(value: any) => { setPeriodOfTime(value); }} />\n          <Text> ชั่วโมง</Text>\n        </Col>\n        <Col>\n          <Button\n            type=\"primary\"\n            onClick={(): void => {\n              setData();\n            }}\n          >\n            ปรับค่า\n          </Button>\n        </Col>\n      </Row>\n      <Row>\n        <Line\n          data={state}\n          options={{\n            title: {\n              display: true,\n              text: 'Average Price value per Time',\n              fontSize: 20,\n            },\n            legend: {\n              display: true,\n              position: 'right',\n            },\n          }}\n        />\n      </Row>\n    </div>\n  );\n};\n\nexport default LineBTC;\n","import {\n  faMoneyBillAlt, faClock, faCommentAlt, faBellSlash, faBell,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Divider, Row, Col, Radio, Input, DatePicker, Space, Badge, Card, Button, Modal, Descriptions,\n} from 'antd';\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport {\n  SymbolType, TradingAPI, TradingNowAPI, TradingTimeSelectAPI,\n} from '../../../api/bitkub';\n\ninterface TickerFormProps {\n  symbol: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\ninterface IInputPrice {\n  price: number;\n  threshold: number;\n}\n\ninterface IInputMain {\n  notification_times: number;\n  detail: string;\n}\n\nconst TickerForm: React.FC<TickerFormProps> = ({ symbol }): JSX.Element => {\n  const [type, setType] = useState('purchase_price');\n  const [showPriceOrPoint, setshowPriceOrPoint] = useState('price');\n  const [inputPrice, setInputPrice] = useState<IInputPrice>({} as IInputPrice);\n  const [inputMain, setInputMain] = useState<IInputMain>({} as IInputMain);\n  const [point1, setPoint1] = useState({\n    date: '', unix: 0, price: 0,\n  });\n  const [point2, setPoint2] = useState({\n    date: '', unix: 0, price: 0,\n  });\n\n  const [visibleModal, setVisibleModal] = useState(false);\n\n  const RadioOnClineHandle = (e: any, show: string) => {\n    setshowPriceOrPoint(show);\n    setType(e.target.value);\n  };\n\n  useEffect(() => {\n    const time = new Date(point1.date).getTime() / 1000;\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(time) && point1.unix === 0) {\n      const unixTime = moment.unix(time).unix();\n      TradingTimeSelectAPI(symbol as SymbolType, unixTime).then((result: any) => {\n        setPoint1({ ...point1, price: result.c[0] });\n      });\n    }\n  }, [point1.date]);\n\n  useEffect(() => {\n    const time = new Date(point1.date).getTime() / 1000;\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(time) && point2.unix === 0) {\n      const unixTime = moment.unix(time).unix();\n      TradingTimeSelectAPI('BTC_THB', unixTime).then((result: any) => {\n        setPoint2({ ...point2, price: result.c[0] });\n      });\n    }\n  }, [point1.date]);\n\n  //   `{\n  //   symbol: 'XLM',\n  //   price: 9.33,\n  //   threshold: 0.02,\n  //   alert: 'ไปถอน',\n  //   now: moment().unix(),\n  // }`\n  const handleOk = () => {\n    // send api\n  };\n\n  const modalDetail = () => {\n    switch (type) {\n      case 'purchase_price':\n        return (\n          <>\n            <Descriptions title=\"ราคาที่ต้องการซื้อ\" bordered>\n              <Descriptions.Item label=\"ราคาบันทึก\" span={3}>{inputPrice.price}</Descriptions.Item>\n              <Descriptions.Item label=\"แจ้งเตือนทั้งหมด\" span={3}>\n                {inputMain.notification_times}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"รายละเอียดการแจ้งเตือน\" span={3}>\n                {inputMain.detail}\n              </Descriptions.Item>\n            </Descriptions>\n          </>\n        );\n      default:\n        break;\n    }\n  };\n  return (\n    <div>\n      <Modal\n        title=\"ตรวจสอบรายการ\"\n        visible={visibleModal}\n        onOk={handleOk}\n        onCancel={() => { setVisibleModal(!visibleModal); }}\n        okText=\"บันทึกรายการ\"\n        cancelText=\"ยกเลิก\"\n        width=\"75%\"\n      >\n        {modalDetail()}\n      </Modal>\n      <Divider orientation=\"left\">กำหนดรูปแบบ</Divider>\n      <Row>\n        <Col sm={24} xs={24} md={24} lg={24}>\n          <Radio.Group defaultValue=\"purchase_price\" buttonStyle=\"solid\">\n            <Radio.Button value=\"purchase_price\" onClick={(e): any => { RadioOnClineHandle(e, 'price'); }}>\n              ราคาที่ต้องการ\n              <strong>ซื้อ</strong>\n            </Radio.Button>\n            <Radio.Button value=\"selling_price\" onClick={(e): any => { RadioOnClineHandle(e, 'price'); }}>\n              ราคาที่ต้องการ\n              <strong>ขาย</strong>\n            </Radio.Button>\n            <Radio.Button disabled value=\"support_line\" onClick={(e): any => { RadioOnClineHandle(e, 'point'); }}>\n              เส้น\n              <strong>แนวรับ</strong>\n            </Radio.Button>\n            <Radio.Button disabled value=\"resistance_line\" onClick={(e): any => { RadioOnClineHandle(e, 'point'); }}>\n              เส้น\n              <strong>แนวต้าน</strong>\n            </Radio.Button>\n          </Radio.Group>\n        </Col>\n      </Row>\n      <Divider orientation=\"left\">กำหนดราคาหรือตำแหน่งเวลา</Divider>\n      <Row style={{ display: showPriceOrPoint === 'price' ? 'block' : 'none' }}>\n        <Col span={24}>\n          <span>ราคาที่ต้องการแจ้งเตือนต่อหน่วย</span>\n          <Input\n            prefix={<FontAwesomeIcon icon={faMoneyBillAlt} />}\n            addonAfter=\"บาท\"\n            allowClear\n            type=\"number\"\n            onChange={(e: any) => { setInputPrice({ ...inputPrice, price: e.target.value as number }); }}\n          />\n        </Col>\n      </Row>\n      <Row style={{ display: showPriceOrPoint === 'point' ? 'block' : 'none' }}>\n        <Col span={24}>\n          <Space>\n            <span>จุดที่ 1:</span>\n            <DatePicker showTime onChange={(value: any) => { setPoint1({ ...point1, date: value.format('YYYY-MM-DDTHH:mm:ss') }); }} />\n          </Space>\n        </Col>\n        <br />\n        <Col span={24}>\n          <span>\n            <Badge.Ribbon text=\"ราคา ณ จุดที่ 1\">\n              <Card>\n                {point1.price}\n                {' '}\n                บาท\n              </Card>\n            </Badge.Ribbon>\n          </span>\n        </Col>\n        <br />\n        <Col span={24}>\n          <Space>\n            <span>จุดที่ 2:</span>\n            <DatePicker showTime onChange={(value: any) => { setPoint2({ ...point1, date: value.format('YYYY-MM-DDTHH:mm:ss') }); }} />\n          </Space>\n        </Col>\n        <br />\n        <Col span={24}>\n          <span>\n            <Badge.Ribbon text=\"ราคา ณ จุดที่ 2\">\n              <Card>\n                {point2.price}\n                {' '}\n                บาท\n              </Card>\n            </Badge.Ribbon>\n          </span>\n        </Col>\n        <br />\n      </Row>\n      <Divider orientation=\"left\">การแจ้งเตือน</Divider>\n      <Row>\n        <Col span={24}>\n          <Input\n            defaultValue={3}\n            prefix={<FontAwesomeIcon icon={faClock} />}\n            addonAfter=\"ครั้ง\"\n            allowClear\n            type=\"number\"\n            onChange={(e: any) => { setInputMain({ ...inputMain, notification_times: e.target.value }); }}\n          />\n        </Col>\n      </Row>\n      <Divider orientation=\"left\">ข้อความ</Divider>\n      <Row>\n        <Input\n          prefix={<FontAwesomeIcon icon={faCommentAlt} />}\n          allowClear\n          onChange={(e: any) => { setInputMain({ ...inputMain, detail: e.target.value }); }}\n        />\n      </Row>\n      <br />\n      <Row justify=\"end\">\n        <Button type=\"primary\" onClick={() => setVisibleModal(!visibleModal)}>บันทึกรายการ</Button>\n      </Row>\n    </div>\n  );\n};\n\nexport default TickerForm;\n","/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport React from 'react';\nimport { Table, Tag, Space } from 'antd';\n\nconst columns = [\n  {\n    title: 'วันที่สร้าง',\n    dataIndex: 'date',\n    key: 'date',\n  },\n  {\n    title: 'รูปแบบ',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'ราคาหรือตำแหน่ง',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'รายละเอียด',\n    key: 'tags',\n    dataIndex: 'tags',\n  },\n  {\n    title: 'จำนวนแจ้งเตือนที่เหลือ',\n    key: 'tags',\n    dataIndex: 'tags',\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text: any, record: any) => (\n      <Space size=\"middle\">\n        <a>\n          Invite\n          {record.name}\n        </a>\n        <a>Delete</a>\n      </Space>\n    ),\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser'],\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher'],\n  },\n];\n\ninterface ITickerTableProps {\n  symbol: string;\n}\n\nconst TickerTable: React.FC<ITickerTableProps> = ({ symbol }): JSX.Element => {\n  console.log(symbol);\n  return (\n    <div>\n      <Table columns={columns} dataSource={data} />\n    </div>\n  );\n};\n\nexport default TickerTable;\n","import {\n  Breadcrumb,\n  Card,\n  Col,\n  Row,\n  Space,\n  Typography,\n} from 'antd';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport InnerHTML from 'dangerously-set-html-content';\nimport LineBTC from './component/LineBTC';\nimport TickerForm from './component/TickerForm';\nimport TickerTable from './component/TickerTable';\n\nconst CryptoSymbol: React.FC = (props): JSX.Element => {\n  const { Symbol } = useParams();\n  const [resetTable, setResetTable] = useState(false);\n  const [viewBitcoin, setViewBitcoin] = useState('');\n\n  setTimeout(() => {\n    setViewBitcoin(`new TradingView.widget(\n      {\n      \"width\": \"100%\",\n      \"height\": \"660\",\n      \"symbol\": \"BITKUB:${Symbol.split('_').join('')}\",\n      \"interval\": \"5\", //240\n      \"timezone\": \"Asia/Bangkok\",\n      \"theme\": \"light\",\n      \"style\": \"1\",\n      \"locale\": \"th_TH\",\n      \"toolbar_bg\": \"#f1f3f6\",\n      \"enable_publishing\": false,\n      \"withdateranges\": true,\n      \"hide_side_toolbar\": false,\n      \"allow_symbol_change\": true,\n      \"details\": true,\n      \"studies\": [\n        \"MACD@tv-basicstudies\",\n        \"RSI@tv-basicstudies\",\n        \"BB@tv-basicstudies\",\n        \"BollingerBandsWidth@tv-basicstudies\"\n      ],\n      \"container_id\": \"tradingview_5a28d\"\n    }\n      );`);\n  }, 1000);\n\n  return (\n    <>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>Investor</Breadcrumb.Item>\n        <Breadcrumb.Item>{Symbol}</Breadcrumb.Item>\n      </Breadcrumb>\n      <div className=\"investor-content\">\n        <Row>\n          <Col span={24}>\n            <InnerHTML html={`\n                  <div class=\"tradingview-widget-container\">\n                  <div id=\"tradingview_5a28d\"></div>\n                  <div class=\"tradingview-widget-copyright\"><a href=\"https://www.tradingview.com/symbols/ETHTHB/?exchange=BITKUB\" rel=\"noopener\" target=\"_blank\"></a> by TradingView</div>\n                  <script type=\"text/javascript\" src=\"https://s3.tradingview.com/tv.js\"></script>\n                  <script type=\"text/javascript\">\n                      ${viewBitcoin}\n                  </script>\n                </div>\n              `}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 24]}>\n          <Col sm={0} xs={0} md={24} lg={12}>\n            <Card title=\"กราฟ ณ​ เวลาปัจจุบัน\">\n              <LineBTC symbol={Symbol} />\n            </Card>\n          </Col>\n          <Col sm={24} xs={24} md={24} lg={12}>\n            <Card title=\"ราคาที่ต้องการจะ Ticker ไปยัง  Line\">\n              <TickerForm symbol={Symbol} />\n            </Card>\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <Row>\n          <Col sm={24} xs={24} md={24} lg={24}>\n            <Card title=\"รายการ Ticker\">\n              <TickerTable symbol={Symbol} />\n            </Card>\n          </Col>\n        </Row>\n        <br />\n        <br />\n      </div>\n    </>\n  );\n};\n\nexport default CryptoSymbol;\n","import React, { useState, useEffect } from 'react';\nimport InnerHTML from 'dangerously-set-html-content';\nimport {\n  Row, Col, Typography, Button,\n} from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt, faExternalLinkSquareAlt, faTasks } from '@fortawesome/free-solid-svg-icons';\nimport { CryptoSymbolData } from './Index';\nimport R from '../../routers/investor/Router';\n\nconst { Title } = Typography;\n\ninterface INewCrypto {\n  oldSymbol: string;\n  symbol: string;\n  script: string;\n}\n\nconst CryptoTradingViewer: React.FC = (): JSX.Element => {\n  const [tradingViews, setTradingViews] = useState<INewCrypto[]>();\n  const [isTradingViewsMount, setIsTradingViewsMount] = useState(false);\n  const [viewBitcoin, setViewBitcoin] = useState<string>();\n  const [viewBitcoin2, setViewBitcoin2] = useState<string>();\n  useEffect(() => {\n    const newCrypto = CryptoSymbolData.map(({ crypto }): INewCrypto => ({ oldSymbol: crypto, symbol: crypto.split('_').join(''), script: '' }));\n    setTradingViews(newCrypto);\n    setIsTradingViewsMount(true);\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const addScript = tradingViews?.map((crypto, index): INewCrypto => ({\n        ...crypto,\n        script: `\n        new TradingView.widget(\n          {\n          \"width\": \"100%\",\n          \"height\": 610,\n          \"symbol\": \"BITKUB:${crypto.symbol}\",\n          \"interval\": \"5\", //240\n          \"timezone\": \"Asia/Bangkok\",\n          \"theme\": \"light\",\n          \"style\": \"1\",\n          \"locale\": \"th_TH\",\n          \"toolbar_bg\": \"#f1f3f6\",\n          \"enable_publishing\": false,\n          \"withdateranges\": true,\n          \"allow_symbol_change\": true,\n          \"details\": true,\n          \"studies\": [\n            \"MACD@tv-basicstudies\",\n            \"RSI@tv-basicstudies\",\n            \"BB@tv-basicstudies\",\n            \"BollingerBandsWidth@tv-basicstudies\"\n          ],\n          \"container_id\": \"tradingview_5a28d${index}\"\n        }\n          );\n        `,\n      }));\n      setTradingViews(addScript);\n    }, 1000);\n  }, [isTradingViewsMount]);\n\n  console.log(tradingViews);\n\n  return (\n    <div>\n      <Row gutter={[16, 24]}>\n        {\n          tradingViews?.map((crypto, index) => (\n            <>\n              <Col span={12}>\n                <Title level={2}>\n                  {crypto.symbol}\n                  <Button type=\"link\" href={R.cryptoSymbol.link.replace(':Symbol', crypto.oldSymbol)} icon={<FontAwesomeIcon icon={faExternalLinkSquareAlt} />}><span style={{ paddingLeft: 12 }}>MANAGE</span></Button>\n                  <Button type=\"link\" href={`https://www.bitkub.com/market/${crypto.oldSymbol.split('_')[0]}`} target=\"_blank\" icon={<FontAwesomeIcon icon={faExternalLinkAlt} />}><span style={{ paddingLeft: 12 }}>BITKUB</span></Button>\n                </Title>\n                <InnerHTML html={`\n                    <div class=\"tradingview-widget-container\">\n                    <div id=\"tradingview_5a28d${index}\"></div>\n                    <div class=\"tradingview-widget-copyright\"><a href=\"https://www.tradingview.com/symbols/${crypto.symbol}/?exchange=BITKUB\" rel=\"noopener\" target=\"_blank\"><span class=\"blue-text\">${crypto.symbol} Chart</span></a> by TradingView</div>\n                    <script type=\"text/javascript\" src=\"https://s3.tradingview.com/tv.js\"></script>\n                    <script type=\"text/javascript\">\n                        ${crypto.script}\n                    </script>\n                  </div>\n                `}\n                />\n              </Col>\n            </>\n          ))\n        }\n      </Row>\n    </div>\n  );\n};\n\nexport default CryptoTradingViewer;\n","import React from 'react';\nimport R from './Router';\nimport Index from '../../page/investor/Index';\nimport { RouterRender } from '../routerRender';\nimport MainLayout from '../../layout/MainLayout';\nimport CryptoSymbol from '../../page/investor/CryptoSymbol';\nimport CryptoTradingViewer from '../../page/investor/CryptoTradingViewer';\n\nexport default RouterRender([\n  {\n    link: R.index.link,\n    layout: MainLayout,\n    component: Index,\n  },\n  {\n    link: R.cryptoSymbol.link,\n    layout: MainLayout,\n    component: CryptoSymbol,\n  },\n  {\n    link: R.tradingViewer.link,\n    layout: MainLayout,\n    component: CryptoTradingViewer,\n  },\n]);\n","import React, { ReactElement } from 'react';\nimport './App.less';\nimport {\n  BrowserRouter, HashRouter, Redirect, Router, Switch,\n} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\nimport GuestRouter from './routers/guest/GuestRouter';\nimport InvestorRouter from './routers/investor/InvestorRouter';\n\nconst clientApollo = new ApolloClient({\n  uri: `${process.env.REACT_APP_BACKEND}/api/v1/graph`,\n  cache: new InMemoryCache(),\n});\n\nconst history = createBrowserHistory();\n\nfunction App(): ReactElement {\n  return (\n    <ApolloProvider client={clientApollo}>\n      <HashRouter>\n        {GuestRouter}\n        {InvestorRouter}\n      </HashRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}